{"remainingRequest":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js!/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/eslint-loader/index.js??ref--13-0!/home/avocado/Documents/NASA/01_space_tracker_ui/src/services/WorldWindService.js","dependencies":[{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/services/WorldWindService.js","mtime":1633220745072},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js","mtime":1630090222596},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/eslint-loader/index.js","mtime":1630090229671}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/avocado/Documents/NASA/01_space_tracker_ui/src/services/WorldWindService.js"],"names":["WorldWind","satellite","require","blue_dot","yellow_dot","red_dot","TLE_DATA","launchGlobe","getPosition","jday","getVelocity","sanitizeSatellites","getSatellites","satellites","satPac","satDataString","JSON","stringify","leoSatLayer","enabled","leoDebrisLayer","meoSatLayer","meoDebrisLayer","heoSatLayer","heoDebrisLayer","geoSatLayer","geoDebrisLayer","satNum","length","renderSats","satData","console","log","satNames","satOwner","satDate","satSite","satStatus","now","Date","everyCurrentPosition","j","currentPosition","time","getTime","velocity","twoline2satrec","TLE_LINE1","TLE_LINE2","position","err","OBJECT_NAME","satVelocity","push","Position","latitude","longitude","altitude","LAUNCH_SITE","OWNER","OPERATIONAL_STATUS","LAUNCH_DATE","substring","placemarkAttributes","PlacemarkAttributes","highlightPlacemarkAttributes","imageScale","OBJECT_TYPE","imageSource","imageOffset","Offset","OFFSET_FRACTION","imageColor","Color","WHITE","labelAttributes","offset","color","placemark","Placemark","altitudeMode","RELATIVE_TO_GROUND","attributes","highlightAttributes","ORBIT_TYPE","addRenderable","wwd","redraw","objectArray","faultySatellites","resultArray","maxSats","updateTime","performance","i","satrec","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","m","jdsatepoch","pv","sgp4","vx","vy","vz","x","y","z","Math","sqrt","year","mon","day","hr","minute","sec","floor","position_and_velocity","propagate","position_eci","gmst","gstime","position_gd","eciToGeodetic","degreesLat","degreesLong","WorldWindow","addLayer","BMNGOneImageLayer","BMNGLayer","starFieldLayer","StarFieldLayer","atmosphereLayer","AtmosphereLayer","compassLayer","CompassLayer","CoordinatesDisplayLayer","orbitsHoverLayer","RenderableLayer","modelLayer","meshLayer","orbitsLayer"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,0BAAtB;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB;;AAEA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,OAAP,MAAoB,6BAApB,C,CAGA;AACA;;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAA6C;;AAG7C,OAAO,IAAMC,WAAW;AAAA,qEAAG;AAAA,2OAuDdC,WAvDc,EAkFdC,IAlFc,eA8FdC,WA9Fc,EA0HdC,kBA1Hc,EAgKdC,aAhKc;AAAA;AAAA;AAAA;AAAA;AAgKdA,YAAAA,aAhKc,2BAgKAC,UAhKA,EAgKY;AAC/B,kBAAIC,MAAM,GAAGH,kBAAkB,CAACE,UAAD,CAA/B;AACAC,cAAAA,MAAM,CAACC,aAAP,GAAuBC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAvB;AAEAI,cAAAA,WAAW,CAACC,OAAZ,GAAsB,IAAtB;AACAC,cAAAA,cAAc,CAACD,OAAf,GAAyB,IAAzB;AAEAE,cAAAA,WAAW,CAACF,OAAZ,GAAsB,IAAtB;AACAG,cAAAA,cAAc,CAACH,OAAf,GAAyB,IAAzB;AAEAI,cAAAA,WAAW,CAACJ,OAAZ,GAAsB,IAAtB;AACAK,cAAAA,cAAc,CAACL,OAAf,GAAyB,IAAzB;AAEAM,cAAAA,WAAW,CAACN,OAAZ,GAAsB,IAAtB;AACAO,cAAAA,cAAc,CAACP,OAAf,GAAyB,IAAzB;AAEA,kBAAIQ,MAAM,GAAGb,MAAM,CAACc,MAApB;AAEA;AACA;;AACAC,cAAAA,UAAU,CAACf,MAAD,CAAV;;AAGA,uBAASe,UAAT,CAAoBC,OAApB,EAA6B;AAC3B;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,MAA5B;AACA,oBAAIM,QAAQ,GAAG,EAAf;AACA,oBAAIC,QAAQ,GAAG,EAAf;AACA,oBAAIC,OAAO,GAAG,EAAd;AACA,oBAAIC,OAAO,GAAG,EAAd;AACA,oBAAIC,SAAS,GAAG,EAAhB;AACA,oBAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,oBAAIC,oBAAoB,GAAG,EAA3B;;AAGA,qBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,MAApB,EAA4Bc,CAAC,EAA7B,EAAiC;AAE/B,sBAAIC,eAAe,GAAG,IAAtB;AACA,sBAAIC,IAAI,GAAG,IAAIJ,IAAJ,CAASD,GAAG,CAACM,OAAJ,EAAT,CAAX;;AAEA,sBAAI;AACF,wBAAIC,QAAQ,GAAGnC,WAAW,CAACT,SAAS,CAAC6C,cAAV,CAAyBhB,OAAO,CAACW,CAAD,CAAP,CAAWM,SAApC,EAA+CjB,OAAO,CAACW,CAAD,CAAP,CAAWO,SAA1D,CAAD,EAAuEL,IAAvE,CAA1B;AACA,wBAAIM,QAAQ,GAAGzC,WAAW,CAACP,SAAS,CAAC6C,cAAV,CAAyBhB,OAAO,CAACW,CAAD,CAAP,CAAWM,SAApC,EAA+CjB,OAAO,CAACW,CAAD,CAAP,CAAWO,SAA1D,CAAD,EAAuEL,IAAvE,CAA1B;AACD,mBAHD,CAGE,OAAOO,GAAP,EAAY;AACZnB,oBAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAG,GAAG,2BAAN,GAAoCT,CAApC,GAAyC,IAAzC,GAAgD3B,MAAM,CAAC2B,CAAD,CAAN,CAAUU,WAAtE;AACA;AACD;;AAGD,sBAAI;AACAC,oBAAAA,WAAW,CAACC,IAAZ,CAAiBR,QAAjB;AACAH,oBAAAA,eAAe,GAAG,IAAI1C,SAAS,CAACsD,QAAd,CAAuBL,QAAQ,CAACM,QAAhC,EAClBN,QAAQ,CAACO,SADS,EAElBP,QAAQ,CAACQ,QAFS,CAAlB;AAGAjB,oBAAAA,oBAAoB,CAACa,IAArB,CAA0BX,eAA1B;AACAN,oBAAAA,OAAO,CAACiB,IAAR,CAAavB,OAAO,CAACW,CAAD,CAAP,CAAWiB,WAAxB;AACAzB,oBAAAA,QAAQ,CAACoB,IAAT,CAAcvB,OAAO,CAACW,CAAD,CAAP,CAAWU,WAAzB;AACAjB,oBAAAA,QAAQ,CAACmB,IAAT,CAAcvB,OAAO,CAACW,CAAD,CAAP,CAAWkB,KAAzB;AACAtB,oBAAAA,SAAS,CAACgB,IAAV,CAAevB,OAAO,CAACW,CAAD,CAAP,CAAWmB,kBAA1B;AACAzB,oBAAAA,OAAO,CAACM,CAAD,CAAP,GAAaX,OAAO,CAACW,CAAD,CAAP,CAAWoB,WAAX,CAAuBC,SAAvB,CAAiC,CAAjC,EAAoC,CAApC,CAAb;AACH,mBAXD,CAWE,OAAOZ,GAAP,EAAY;AACVnB,oBAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAG,GAAG,sBAAN,GAA+BT,CAA3C;AACAV,oBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACW,CAAD,CAAP,CAAWU,WAAvB;AACF;AACD;;AAGD,sBAAIY,mBAAmB,GAAG,IAAI/D,SAAS,CAACgE,mBAAd,CAAkC,IAAlC,CAA1B;AACA,sBAAIC,4BAA4B,GAAG,IAAIjE,SAAS,CAACgE,mBAAd,CAAkCD,mBAAlC,CAAnC;AACAE,kBAAAA,4BAA4B,CAACC,UAA7B,GAA0C,GAA1C;AAEAnC,kBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EApC+B,CAsC/B;;AACA,0BAAQF,OAAO,CAACW,CAAD,CAAP,CAAW0B,WAAnB;AACE,yBAAK,SAAL;AACEJ,sBAAAA,mBAAmB,CAACK,WAApB,GAAkCjE,QAAlC;AACA4D,sBAAAA,mBAAmB,CAACG,UAApB,GAAiC,GAAjC;AACA;;AACF,yBAAK,aAAL;AACEH,sBAAAA,mBAAmB,CAACK,WAApB,GAAkChE,UAAlC;AACA2D,sBAAAA,mBAAmB,CAACG,UAApB,GAAiC,GAAjC;AACA;;AACF;AACEH,sBAAAA,mBAAmB,CAACK,WAApB,GAAkC/D,OAAlC;AACA0D,sBAAAA,mBAAmB,CAACG,UAApB,GAAiC,GAAjC;AACAD,sBAAAA,4BAA4B,CAACC,UAA7B,GAA0C,GAA1C;AAZJ;;AAeAH,kBAAAA,mBAAmB,CAACM,WAApB,GAAkC,IAAIrE,SAAS,CAACsE,MAAd,CAChCtE,SAAS,CAACuE,eADsB,EACL,GADK,EAEhCvE,SAAS,CAACuE,eAFsB,EAEL,GAFK,CAAlC;AAGAR,kBAAAA,mBAAmB,CAACS,UAApB,GAAiCxE,SAAS,CAACyE,KAAV,CAAgBC,KAAjD;AACAX,kBAAAA,mBAAmB,CAACY,eAApB,CAAoCC,MAApC,GAA6C,IAAI5E,SAAS,CAACsE,MAAd,CAC3CtE,SAAS,CAACuE,eADiC,EAChB,GADgB,EAE3CvE,SAAS,CAACuE,eAFiC,EAEhB,GAFgB,CAA7C;AAGAR,kBAAAA,mBAAmB,CAACY,eAApB,CAAoCE,KAApC,GAA4C7E,SAAS,CAACyE,KAAV,CAAgBC,KAA5D;AAGA,sBAAII,SAAS,GAAG,IAAI9E,SAAS,CAAC+E,SAAd,CAAwBvC,oBAAoB,CAACC,CAAD,CAA5C,CAAhB;AACAqC,kBAAAA,SAAS,CAACE,YAAV,GAAyBhF,SAAS,CAACiF,kBAAnC;AACAH,kBAAAA,SAAS,CAACI,UAAV,GAAuBnB,mBAAvB;AACAe,kBAAAA,SAAS,CAACK,mBAAV,GAAgClB,4BAAhC,CAnE+B,CAqE/B;;AACA,sBAAInC,OAAO,CAACW,CAAD,CAAP,CAAW0B,WAAX,KAA2B,SAA/B,EAA0C;AACxC,wBAAIrC,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,iBAA9B,EAAiD;AAC/ClE,sBAAAA,WAAW,CAACmE,aAAZ,CAA0BP,SAA1B;AACD,qBAFD,MAEO,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,oBAA9B,EAAoD;AACzD/D,sBAAAA,WAAW,CAACgE,aAAZ,CAA0BP,SAA1B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,gBAA9B,EAAgD;AACrD3D,sBAAAA,WAAW,CAAC4D,aAAZ,CAA0BP,SAA1B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,yBAA9B,EAAyD;AAC9D7D,sBAAAA,WAAW,CAAC8D,aAAZ,CAA0BP,SAA1B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,cAA9B,EAA8C,CACnD;AACD,qBAFM,MAEA;AACLrD,sBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAvB;AACD;AACF,mBAdD,MAcO,IAAItD,OAAO,CAACW,CAAD,CAAP,CAAW0B,WAAX,KAA2B,QAA/B,EAAyC;AAC9C,wBAAIrC,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,iBAA9B,EAAiD;AAC/ChE,sBAAAA,cAAc,CAACiE,aAAf,CAA6BP,SAA7B;AACD,qBAFD,MAEO,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,oBAA9B,EAAoD;AACzD9D,sBAAAA,cAAc,CAAC+D,aAAf,CAA6BP,SAA7B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,gBAA9B,EAAgD;AACrD1D,sBAAAA,cAAc,CAAC2D,aAAf,CAA6BP,SAA7B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,yBAA9B,EAAyD;AAC9D5D,sBAAAA,cAAc,CAAC6D,aAAf,CAA6BP,SAA7B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,cAA9B,EAA8C,CACnD;AACD,qBAFM,MAEA;AACLrD,sBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAvB;AACD;AACF;AACF,iBA/G0B,CA+GzB;;;AAEFE,gBAAAA,GAAG,CAACC,MAAJ;AACD;AACF,aA1SoB;;AA0Hd5E,YAAAA,kBA1Hc,gCA0HK6E,WA1HL,EA0HkB;AACrC,kBAAIC,gBAAgB,GAAG,CAAvB;AACA,kBAAIC,WAAW,GAAG,EAAlB;AACA,kBAAIC,OAAO,GAAGH,WAAW,CAAC5D,MAA1B;AACA,kBAAIgE,UAAU,GAAGC,WAAW,CAACvD,GAAZ,EAAjB;AACAP,cAAAA,OAAO,CAACC,GAAR,CAAY4D,UAAZ;AACA,kBAAItD,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,kBAAII,IAAI,GAAG,IAAIJ,IAAJ,CAASD,GAAG,CAACM,OAAJ,EAAT,CAAX;;AACA,mBAAK,IAAIkD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAApB,EAA6BG,CAAC,IAAI,CAAlC,EAAqC;AAEjC,oBAAI;AACA,sBAAI7C,QAAQ,GAAGzC,WAAW,CAACP,SAAS,CAAC6C,cAAV,CAAyB0C,WAAW,CAACM,CAAD,CAAX,CAAe/C,SAAxC,EAAmDyC,WAAW,CAACM,CAAD,CAAX,CAAe9C,SAAlE,CAAD,EAA+EL,IAA/E,CAA1B;AACA,sBAAIE,QAAQ,GAAGnC,WAAW,CAACT,SAAS,CAAC6C,cAAV,CAAyB0C,WAAW,CAACM,CAAD,CAAX,CAAe/C,SAAxC,EAAmDyC,WAAW,CAACM,CAAD,CAAX,CAAe9C,SAAlE,CAAD,EAA+EL,IAA/E,CAA1B;AAEH,iBAJD,CAIE,OAAOO,GAAP,EAAY;AACV;AACAuC,kBAAAA,gBAAgB,IAAI,CAApB;AACA;AACH;;AAED,oBAAG,OAAOD,WAAW,CAACM,CAAD,CAAX,CAAejC,WAAtB,KAAsC,WAAzC,EAAsD;AAEtD6B,gBAAAA,WAAW,CAACrC,IAAZ,CAAiBmC,WAAW,CAACM,CAAD,CAA5B;AACH;;AACD/D,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCwD,WAAW,CAAC,CAAD,CAA3C;AACAvC,cAAAA,QAAQ,GAAGzC,WAAW,CAACP,SAAS,CAAC6C,cAAV,CAAyB0C,WAAW,CAAC,CAAD,CAAX,CAAezC,SAAxC,EAAmDyC,WAAW,CAAC,CAAD,CAAX,CAAexC,SAAlE,CAAD,EAA+EL,IAA/E,CAAtB;AAEAZ,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BiB,QAA1B;AACAlB,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Ba,QAA1B;AACA+C,cAAAA,UAAU,GAAGC,WAAW,CAACvD,GAAZ,KAAoBsD,UAAjC;AACA7D,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCyD,gBAAjC;AACA1D,cAAAA,OAAO,CAACC,GAAR,CAAYwD,WAAW,CAAC5D,MAAZ,GAAqB,kBAAjC;AACAG,cAAAA,OAAO,CAACC,GAAR,CAAY0D,WAAW,CAAC9D,MAAZ,GAAqB,gBAAjC;AACA,qBAAO8D,WAAP;AACH,aA5JsB;;AA8FdhF,YAAAA,WA9Fc,yBA8FFqF,MA9FE,EA8FMpD,IA9FN,EA8FY;AAE/B,kBAAIF,CAAC,GAAGhC,IAAI,CAACkC,IAAI,CAACqD,cAAL,EAAD,EACZrD,IAAI,CAACsD,WAAL,KAAqB,CADT,EACY;AACxBtD,cAAAA,IAAI,CAACuD,UAAL,EAFY,EAGZvD,IAAI,CAACwD,WAAL,EAHY,EAIZxD,IAAI,CAACyD,aAAL,EAJY,EAKZzD,IAAI,CAAC0D,aAAL,EALY,CAAZ;AAMA5D,cAAAA,CAAC,IAAIE,IAAI,CAAC2D,kBAAL,KAA4B,UAAjC;AAGA,kBAAIC,CAAC,GAAG,CAAC9D,CAAC,GAAGsD,MAAM,CAACS,UAAZ,IAA0B,MAAlC;AACA,kBAAIC,EAAE,GAAGxG,SAAS,CAACyG,IAAV,CAAeX,MAAf,EAAuBQ,CAAvB,CAAT;AACA,kBAAII,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;AAEAF,cAAAA,EAAE,GAAGF,EAAE,CAAC5D,QAAH,CAAYiE,CAAjB;AACAF,cAAAA,EAAE,GAAGH,EAAE,CAAC5D,QAAH,CAAYkE,CAAjB;AACAF,cAAAA,EAAE,GAAGJ,EAAE,CAAC5D,QAAH,CAAYmE,CAAjB;AAEA,kBAAI5D,WAAW,GAAG6D,IAAI,CAACC,IAAL,CACdP,EAAE,GAAGA,EAAL,GACAC,EAAE,GAAGA,EADL,GAEAC,EAAE,GAAGA,EAHS,CAAlB;AAKA,qBAAOzD,WAAP;AACH,aAvHsB;;AAkFd3C,YAAAA,IAlFc,kBAkFT0G,IAlFS,EAkFHC,GAlFG,EAkFEC,GAlFF,EAkFOC,EAlFP,EAkFWC,MAlFX,EAkFmBC,GAlFnB,EAkFwB;AAC3C;;AACA,qBAAQ,QAAQL,IAAR,GACNF,IAAI,CAACQ,KAAL,CAAY,KAAKN,IAAI,GAAGF,IAAI,CAACQ,KAAL,CAAW,CAACL,GAAG,GAAG,CAAP,IAAY,IAAvB,CAAZ,CAAD,GAA8C,IAAzD,CADM,GAENH,IAAI,CAACQ,KAAL,CAAW,MAAML,GAAN,GAAY,GAAvB,CAFM,GAGNC,GAHM,GAGA,SAHA,GAIN,CAAC,CAACG,GAAG,GAAG,IAAN,GAAaD,MAAd,IAAwB,IAAxB,GAA+BD,EAAhC,IAAsC,IAJxC,CAI8C;AAC5C;AALF;AAOH,aA3FsB;;AAuDd9G,YAAAA,WAvDc,yBAuDFuF,MAvDE,EAuDMpD,IAvDN,EAuDY;AAC/B,kBAAI+E,qBAAqB,GAAGzH,SAAS,CAAC0H,SAAV,CAAoB5B,MAApB,EAC5BpD,IAAI,CAACqD,cAAL,EAD4B,EAE5BrD,IAAI,CAACsD,WAAL,KAAqB,CAFO,EAG5BtD,IAAI,CAACuD,UAAL,EAH4B,EAI5BvD,IAAI,CAACwD,WAAL,EAJ4B,EAK5BxD,IAAI,CAACyD,aAAL,EAL4B,EAM5BzD,IAAI,CAAC0D,aAAL,EAN4B,CAA5B;AAOA,kBAAIuB,YAAY,GAAGF,qBAAqB,CAAC,UAAD,CAAxC,CAR+B,CAU/B;;AACA,kBAAIG,IAAI,GAAG5H,SAAS,CAAC6H,MAAV,CAAiBnF,IAAI,CAACqD,cAAL,EAAjB,EACXrD,IAAI,CAACsD,WAAL,KAAqB,CADV,EAEXtD,IAAI,CAACuD,UAAL,EAFW,EAGXvD,IAAI,CAACwD,WAAL,EAHW,EAIXxD,IAAI,CAACyD,aAAL,EAJW,EAKXzD,IAAI,CAAC0D,aAAL,EALW,CAAX,CAX+B,CAkB/B;;AACA,kBAAI0B,WAAW,GAAG9H,SAAS,CAAC+H,aAAV,CAAwBJ,YAAxB,EAAsCC,IAAtC,CAAlB;AACA,kBAAItE,QAAQ,GAAGtD,SAAS,CAACgI,UAAV,CAAqBF,WAAW,CAAC,UAAD,CAAhC,CAAf;AACA,kBAAIvE,SAAS,GAAGvD,SAAS,CAACiI,WAAV,CAAsBH,WAAW,CAAC,WAAD,CAAjC,CAAhB;AACA,kBAAItE,QAAQ,GAAGsE,WAAW,CAAC,QAAD,CAAX,GAAwB,IAAvC;AAEA,qBAAO,IAAI/H,SAAS,CAACsD,QAAd,CAAuBC,QAAvB,EAAiCC,SAAjC,EAA4CC,QAA5C,CAAP;AACH,aAhFsB;;AAEvB;AACI6B,YAAAA,GAHmB,GAGb,IAAItF,SAAS,CAACmI,WAAd,CAA0B,WAA1B,CAHa;AAIvB7C,YAAAA,GAAG,CAAC8C,QAAJ,CAAa,IAAIpI,SAAS,CAACqI,iBAAd,EAAb;AACA/C,YAAAA,GAAG,CAAC8C,QAAJ,CAAa,IAAIpI,SAAS,CAACsI,SAAd,EAAb,EALuB,CAOvB;;AACIC,YAAAA,cARmB,GAQF,IAAIvI,SAAS,CAACwI,cAAd,EARE;AASvBlD,YAAAA,GAAG,CAAC8C,QAAJ,CAAaG,cAAb;AACIE,YAAAA,eAVmB,GAUD,IAAIzI,SAAS,CAAC0I,eAAd,EAVC;AAWvBpD,YAAAA,GAAG,CAAC8C,QAAJ,CAAaK,eAAb;AACInG,YAAAA,GAZmB,GAYb,IAAIC,IAAJ,EAZa;AAavBgG,YAAAA,cAAc,CAAC5F,IAAf,GAAsBL,GAAtB;AACAmG,YAAAA,eAAe,CAAC9F,IAAhB,GAAuBL,GAAvB;AAGIqG,YAAAA,YAjBmB,GAiBJ,IAAI3I,SAAS,CAAC4I,YAAd,EAjBI;AAkBvBtD,YAAAA,GAAG,CAAC8C,QAAJ,CAAaO,YAAb;AACArD,YAAAA,GAAG,CAAC8C,QAAJ,CAAa,IAAIpI,SAAS,CAAC6I,uBAAd,CAAsCvD,GAAtC,CAAb,EAnBuB,CAsBvB;;AACIwD,YAAAA,gBAvBmB,GAuBA,IAAI9I,SAAS,CAAC+I,eAAd,EAvBA;AAwBnBC,YAAAA,UAxBmB,GAwBN,IAAIhJ,SAAS,CAAC+I,eAAd,CAA8B,OAA9B,CAxBM;AAyBnBE,YAAAA,SAzBmB,GAyBP,IAAIjJ,SAAS,CAAC+I,eAAd,EAzBO;AA2BnBG,YAAAA,WA3BmB,GA2BL,IAAIlJ,SAAS,CAAC+I,eAAd,CAA8B,OAA9B,CA3BK;AA4BnB7H,YAAAA,WA5BmB,GA4BL,IAAIlB,SAAS,CAAC+I,eAAd,CAA8B,cAA9B,CA5BK;AA6BnB1H,YAAAA,WA7BmB,GA6BL,IAAIrB,SAAS,CAAC+I,eAAd,CAA8B,cAA9B,CA7BK;AA8BnBxH,YAAAA,WA9BmB,GA8BL,IAAIvB,SAAS,CAAC+I,eAAd,CAA8B,cAA9B,CA9BK;AA+BnBtH,YAAAA,WA/BmB,GA+BL,IAAIzB,SAAS,CAAC+I,eAAd,CAA8B,cAA9B,CA/BK;AAiCnB3H,YAAAA,cAjCmB,GAiCF,IAAIpB,SAAS,CAAC+I,eAAd,CAA8B,YAA9B,CAjCE;AAkCnBzH,YAAAA,cAlCmB,GAkCF,IAAItB,SAAS,CAAC+I,eAAd,CAA8B,YAA9B,CAlCE;AAmCnBvH,YAAAA,cAnCmB,GAmCF,IAAIxB,SAAS,CAAC+I,eAAd,CAA8B,YAA9B,CAnCE;AAoCnBrH,YAAAA,cApCmB,GAoCF,IAAI1B,SAAS,CAAC+I,eAAd,CAA8B,YAA9B,CApCE;AAsCvBzD,YAAAA,GAAG,CAAC8C,QAAJ,CAAaU,gBAAb;AACAxD,YAAAA,GAAG,CAAC8C,QAAJ,CAAalH,WAAb;AACAoE,YAAAA,GAAG,CAAC8C,QAAJ,CAAa/G,WAAb;AACAiE,YAAAA,GAAG,CAAC8C,QAAJ,CAAa7G,WAAb;AACA+D,YAAAA,GAAG,CAAC8C,QAAJ,CAAa3G,WAAb;AAEA6D,YAAAA,GAAG,CAAC8C,QAAJ,CAAahH,cAAb;AACAkE,YAAAA,GAAG,CAAC8C,QAAJ,CAAa9G,cAAb;AACAgE,YAAAA,GAAG,CAAC8C,QAAJ,CAAa5G,cAAb;AACA8D,YAAAA,GAAG,CAAC8C,QAAJ,CAAa1G,cAAb;AAEA4D,YAAAA,GAAG,CAAC8C,QAAJ,CAAaa,SAAb;AACA3D,YAAAA,GAAG,CAAC8C,QAAJ,CAAaY,UAAb;AACA1D,YAAAA,GAAG,CAAC8C,QAAJ,CAAac,WAAb,EAnDuB,CAsDvB;;AAuCI9F,YAAAA,WA7FmB,GA6FL,EA7FK;AA8JvBxC,YAAAA,aAAa,CAACN,QAAD,CAAb;AA8IAgF,YAAAA,GAAG,CAACC,MAAJ;;AA5SuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXhF,WAAW;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import WorldWind from '@nasaworldwind/worldwind'\nvar satellite = require('satellite.js');\n\nimport blue_dot from '../assets/icons/blue_dot.png'\nimport yellow_dot from '../assets/icons/yellow_dot.png'\nimport red_dot from '../assets/icons/red_dot.png'\n\n\n//import TLE_DATA from '../tle_data/basicTLE.json'\n//import TLE_DATA from '../tle_data/TLE.json' // Not working\nimport TLE_DATA from '../tle_data/TLE2.json' // Working fine\n\n\nexport const launchGlobe = async () => {        \n\n    // Create a WorldWindow for the canvas.\n    var wwd = new WorldWind.WorldWindow(\"canvasOne\");\n    wwd.addLayer(new WorldWind.BMNGOneImageLayer());        \n    wwd.addLayer(new WorldWind.BMNGLayer());\n    \n    // Adding star and atmosphere layer:    \n    var starFieldLayer = new WorldWind.StarFieldLayer();    \n    wwd.addLayer(starFieldLayer);    \n    var atmosphereLayer = new WorldWind.AtmosphereLayer();    \n    wwd.addLayer(atmosphereLayer);\n    var now = new Date();\n    starFieldLayer.time = now;\n    atmosphereLayer.time = now;\n\n\n    var compassLayer = new WorldWind.CompassLayer();\n    wwd.addLayer(compassLayer);        \n    wwd.addLayer(new WorldWind.CoordinatesDisplayLayer(wwd));\n\n\n    // Adding custom layers\n    var orbitsHoverLayer = new WorldWind.RenderableLayer();\n    var modelLayer = new WorldWind.RenderableLayer(\"Model\");\n    var meshLayer = new WorldWind.RenderableLayer();\n\n    var orbitsLayer = new WorldWind.RenderableLayer(\"Orbit\");\n    var leoSatLayer = new WorldWind.RenderableLayer(\"LEO Payloads\");\n    var meoSatLayer = new WorldWind.RenderableLayer(\"MEO Payloads\");\n    var heoSatLayer = new WorldWind.RenderableLayer(\"HEO Payloads\");\n    var geoSatLayer = new WorldWind.RenderableLayer(\"GEO Payloads\");\n\n    var leoDebrisLayer = new WorldWind.RenderableLayer(\"LEO Debris\");\n    var meoDebrisLayer = new WorldWind.RenderableLayer(\"MEO Debris\");\n    var heoDebrisLayer = new WorldWind.RenderableLayer(\"HEO Debris\");\n    var geoDebrisLayer = new WorldWind.RenderableLayer(\"GEO Debris\");\n    \n    wwd.addLayer(orbitsHoverLayer);\n    wwd.addLayer(leoSatLayer);\n    wwd.addLayer(meoSatLayer);\n    wwd.addLayer(heoSatLayer);\n    wwd.addLayer(geoSatLayer);\n    \n    wwd.addLayer(leoDebrisLayer);\n    wwd.addLayer(meoDebrisLayer);\n    wwd.addLayer(heoDebrisLayer);\n    wwd.addLayer(geoDebrisLayer);\n    \n    wwd.addLayer(meshLayer);\n    wwd.addLayer(modelLayer);\n    wwd.addLayer(orbitsLayer);\n\n\n    // Get position of every satellite\n    function getPosition(satrec, time) {\n        var position_and_velocity = satellite.propagate(satrec,\n        time.getUTCFullYear(),\n        time.getUTCMonth() + 1,\n        time.getUTCDate(),\n        time.getUTCHours(),\n        time.getUTCMinutes(),\n        time.getUTCSeconds());\n        var position_eci = position_and_velocity[\"position\"];\n    \n        //var gmst = satellite.gstime_from_date(time.getUTCFullYear(),\n        var gmst = satellite.gstime(time.getUTCFullYear(),\n        time.getUTCMonth() + 1,\n        time.getUTCDate(),\n        time.getUTCHours(),\n        time.getUTCMinutes(),\n        time.getUTCSeconds());\n    \n        //var position_gd = satellite.eci_to_geodetic(position_eci, gmst);\n        var position_gd = satellite.eciToGeodetic(position_eci, gmst);\n        var latitude = satellite.degreesLat(position_gd[\"latitude\"]);\n        var longitude = satellite.degreesLong(position_gd[\"longitude\"]);\n        var altitude = position_gd[\"height\"] * 1000;\n    \n        return new WorldWind.Position(latitude, longitude, altitude);\n    }\n\n    function jday(year, mon, day, hr, minute, sec) {\n        'use strict';\n        return (367.0 * year -\n          Math.floor((7 * (year + Math.floor((mon + 9) / 12.0))) * 0.25) +\n          Math.floor(275 * mon / 9.0) +\n          day + 1721013.5 +\n          ((sec / 60.0 + minute) / 60.0 + hr) / 24.0  //  ut in days\n          //#  - 0.5*sgn(100.0*year + mon - 190002.5) + 0.5;\n        );\n    }\n    \n    var satVelocity = [];\n    function getVelocity(satrec, time) {\n    \n        var j = jday(time.getUTCFullYear(),\n        time.getUTCMonth() + 1, // Note, this function requires months in range 1-12.\n        time.getUTCDate(),\n        time.getUTCHours(),\n        time.getUTCMinutes(),\n        time.getUTCSeconds());\n        j += time.getUTCMilliseconds() * 1.15741e-8;\n        \n        \n        var m = (j - satrec.jdsatepoch) * 1440.0;\n        var pv = satellite.sgp4(satrec, m);\n        var vx, vy, vz;\n        \n        vx = pv.velocity.x;\n        vy = pv.velocity.y;\n        vz = pv.velocity.z;\n        \n        var satVelocity = Math.sqrt(\n            vx * vx +\n            vy * vy +\n            vz * vz\n        );\n        return satVelocity;\n    }\n\n    //purifies non-working satellites\n    function sanitizeSatellites(objectArray) {\n        var faultySatellites = 0;\n        var resultArray = [];\n        var maxSats = objectArray.length;\n        var updateTime = performance.now();\n        console.log(updateTime)\n        var now = new Date();\n        var time = new Date(now.getTime());\n        for (var i = 0; i < maxSats; i += 1) {\n            \n            try {\n                var position = getPosition(satellite.twoline2satrec(objectArray[i].TLE_LINE1, objectArray[i].TLE_LINE2), time);\n                var velocity = getVelocity(satellite.twoline2satrec(objectArray[i].TLE_LINE1, objectArray[i].TLE_LINE2), time);\n                \n            } catch (err) {\n                // console.log(objectArray[i].OBJECT_NAME +\" is a faulty sat it is \" + i);\n                faultySatellites += 1;                \n                continue;\n            }        \n            \n            if(typeof objectArray[i].LAUNCH_DATE === \"undefined\") continue;            \n\n            resultArray.push(objectArray[i]);\n        }\n        console.log('objectArray[i]: ', objectArray[0])\n        position = getPosition(satellite.twoline2satrec(objectArray[0].TLE_LINE1, objectArray[0].TLE_LINE2), time);\n\n        console.log('position: ', position)\n        console.log('velocity: ', velocity)\n        updateTime = performance.now() - updateTime;\n        console.log('faultySatellites: ',faultySatellites);\n        console.log(objectArray.length + \" from uncleansed\");\n        console.log(resultArray.length + \" from cleansed\");        \n        return resultArray;\n    }\n\n    getSatellites(TLE_DATA)\n\n    function getSatellites(satellites) {\n        var satPac = sanitizeSatellites(satellites);\n        satPac.satDataString = JSON.stringify(satPac);\n    \n        leoSatLayer.enabled = true;        \n        leoDebrisLayer.enabled = true;\n\n        meoSatLayer.enabled = true;        \n        meoDebrisLayer.enabled = true;\n\n        heoSatLayer.enabled = true;        \n        heoDebrisLayer.enabled = true;\n\n        geoSatLayer.enabled = true;        \n        geoDebrisLayer.enabled = true;\n    \n        var satNum = satPac.length;    \n\n        /***Satellite Propagation***/\n        //plots all sats\n        renderSats(satPac);\n\n\n        function renderSats(satData) {\n          // trackedPlaceholder.textContent = satData.length;\n          console.log('renderSats: ', satNum)\n          var satNames = [];\n          var satOwner = [];\n          var satDate = [];\n          var satSite = [];\n          var satStatus = [];\n          var now = new Date();\n          var everyCurrentPosition = [];\n          \n          \n          for (var j = 0; j < satNum; j++) {\n\n            var currentPosition = null;\n            var time = new Date(now.getTime());\n    \n            try {\n              var velocity = getVelocity(satellite.twoline2satrec(satData[j].TLE_LINE1, satData[j].TLE_LINE2), time);\n              var position = getPosition(satellite.twoline2satrec(satData[j].TLE_LINE1, satData[j].TLE_LINE2), time);\n            } catch (err) {\n              console.log(err + 'Error in renderSats, sat ' + j +  \": \" + satPac[j].OBJECT_NAME);\n              continue;\n            }\n\n\n            try {                \n                satVelocity.push(velocity);\n                currentPosition = new WorldWind.Position(position.latitude,\n                position.longitude,\n                position.altitude);\n                everyCurrentPosition.push(currentPosition);\n                satSite.push(satData[j].LAUNCH_SITE);\n                satNames.push(satData[j].OBJECT_NAME);\n                satOwner.push(satData[j].OWNER);\n                satStatus.push(satData[j].OPERATIONAL_STATUS);\n                satDate[j] = satData[j].LAUNCH_DATE.substring(0, 4);\n            } catch (err) {                \n                console.log(err + ' in renderSats, sat ' + j);\n                console.log(satData[j].OBJECT_NAME);\n              continue;\n            }\n\n\n            var placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n            var highlightPlacemarkAttributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n            highlightPlacemarkAttributes.imageScale = 0.4;\n    \n            console.log('Loading assets ...')\n\n            // Add colored image depending on sat type\n            switch (satData[j].OBJECT_TYPE) {              \n              case \"PAYLOAD\":\n                placemarkAttributes.imageSource = blue_dot;\n                placemarkAttributes.imageScale = 0.2;\n                break;\n              case \"ROCKET BODY\":\n                placemarkAttributes.imageSource = yellow_dot;\n                placemarkAttributes.imageScale = 0.2;\n                break;\n              default:\n                placemarkAttributes.imageSource = red_dot;\n                placemarkAttributes.imageScale = 0.2;\n                highlightPlacemarkAttributes.imageScale = 0.3;\n            }\n    \n            placemarkAttributes.imageOffset = new WorldWind.Offset(\n              WorldWind.OFFSET_FRACTION, 0.5,\n              WorldWind.OFFSET_FRACTION, 0.5);\n            placemarkAttributes.imageColor = WorldWind.Color.WHITE;\n            placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n              WorldWind.OFFSET_FRACTION, 0.5,\n              WorldWind.OFFSET_FRACTION, 1.0);\n            placemarkAttributes.labelAttributes.color = WorldWind.Color.WHITE;\n    \n    \n            var placemark = new WorldWind.Placemark(everyCurrentPosition[j]);\n            placemark.altitudeMode = WorldWind.RELATIVE_TO_GROUND;\n            placemark.attributes = placemarkAttributes;\n            placemark.highlightAttributes = highlightPlacemarkAttributes;\n    \n            //Defines orbit ranges\n            if (satData[j].OBJECT_TYPE === \"PAYLOAD\") {\n              if (satData[j].ORBIT_TYPE === \"Low Earth Orbit\") {\n                leoSatLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Middle Earth Orbit\") {\n                meoSatLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Geosynchronous\") {\n                geoSatLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Highly Elliptical Orbit\") {\n                heoSatLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Unclassified\") {\n                //unclassifiedSatLayer.addRenderable(placemark);\n              } else {\n                console.log(satData[j].ORBIT_TYPE);\n              }\n            } else if (satData[j].OBJECT_TYPE === \"DEBRIS\") {\n              if (satData[j].ORBIT_TYPE === \"Low Earth Orbit\") {\n                leoDebrisLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Middle Earth Orbit\") {\n                meoDebrisLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Geosynchronous\") {\n                geoDebrisLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Highly Elliptical Orbit\") {\n                heoDebrisLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Unclassified\") {\n                //unclassifiedDebrisLayer.addRenderable(placemark);\n              } else {\n                console.log(satData[j].ORBIT_TYPE);\n              }\n            }                \n          } //End of for                 \n    \n          wwd.redraw();\n        }\n      }\n    \n    wwd.redraw();\n\n}"]}]}