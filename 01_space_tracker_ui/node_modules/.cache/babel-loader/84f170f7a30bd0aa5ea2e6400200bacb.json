{"remainingRequest":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js!/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/eslint-loader/index.js??ref--13-0!/home/avocado/Documents/NASA/01_space_tracker_ui/src/services/WorldWindService.js","dependencies":[{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/services/WorldWindService.js","mtime":1633218218772},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js","mtime":1630090222596},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/eslint-loader/index.js","mtime":1630090229671}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2F2b2NhZG8vRG9jdW1lbnRzL05BU0EvMDFfc3BhY2VfdHJhY2tlcl91aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgV29ybGRXaW5kIGZyb20gJ0BuYXNhd29ybGR3aW5kL3dvcmxkd2luZCc7Cgp2YXIgc2F0ZWxsaXRlID0gcmVxdWlyZSgnc2F0ZWxsaXRlLmpzJyk7IC8vaW1wb3J0IFRMRV9EQVRBIGZyb20gJy4uL3RsZV9kYXRhL2Jhc2ljVExFLmpzb24nCgoKaW1wb3J0IFRMRV9EQVRBIGZyb20gJy4uL3RsZV9kYXRhL1RMRTIuanNvbic7CmV4cG9ydCB2YXIgbGF1bmNoR2xvYmUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgdmFyIHd3ZCwgc3RhckZpZWxkTGF5ZXIsIGF0bW9zcGhlcmVMYXllciwgbm93LCBjb21wYXNzTGF5ZXIsIG9yYml0c0hvdmVyTGF5ZXIsIG1vZGVsTGF5ZXIsIG1lc2hMYXllciwgb3JiaXRzTGF5ZXIsIGxlb1NhdExheWVyLCBtZW9TYXRMYXllciwgaGVvU2F0TGF5ZXIsIGdlb1NhdExheWVyLCBsZW9EZWJyaXNMYXllciwgbWVvRGVicmlzTGF5ZXIsIGhlb0RlYnJpc0xheWVyLCBnZW9EZWJyaXNMYXllciwgZ2V0UG9zaXRpb24sIGpkYXksIHNhdFZlbG9jaXR5LCBnZXRWZWxvY2l0eSwgc2FuaXRpemVTYXRlbGxpdGVzLCBnZXRTYXRlbGxpdGVzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBnZXRTYXRlbGxpdGVzID0gZnVuY3Rpb24gX2dldFNhdGVsbGl0ZXMoc2F0ZWxsaXRlcykgewogICAgICAgICAgICAgIHZhciBzYXRQYWMgPSBzYW5pdGl6ZVNhdGVsbGl0ZXMoc2F0ZWxsaXRlcyk7CiAgICAgICAgICAgICAgc2F0UGFjLnNhdERhdGFTdHJpbmcgPSBKU09OLnN0cmluZ2lmeShzYXRQYWMpOwogICAgICAgICAgICAgIGxlb1NhdExheWVyLmVuYWJsZWQgPSB0cnVlOwogICAgICAgICAgICAgIGxlb0RlYnJpc0xheWVyLmVuYWJsZWQgPSB0cnVlOwogICAgICAgICAgICAgIG1lb1NhdExheWVyLmVuYWJsZWQgPSB0cnVlOwogICAgICAgICAgICAgIG1lb0RlYnJpc0xheWVyLmVuYWJsZWQgPSB0cnVlOwogICAgICAgICAgICAgIGhlb1NhdExheWVyLmVuYWJsZWQgPSB0cnVlOwogICAgICAgICAgICAgIGhlb0RlYnJpc0xheWVyLmVuYWJsZWQgPSB0cnVlOwogICAgICAgICAgICAgIGdlb1NhdExheWVyLmVuYWJsZWQgPSB0cnVlOwogICAgICAgICAgICAgIGdlb0RlYnJpc0xheWVyLmVuYWJsZWQgPSB0cnVlOwogICAgICAgICAgICAgIHZhciBzYXROdW0gPSBzYXRQYWMubGVuZ3RoOwogICAgICAgICAgICAgIC8qKipTYXRlbGxpdGUgUHJvcGFnYXRpb24qKiovCiAgICAgICAgICAgICAgLy9wbG90cyBhbGwgc2F0cwoKICAgICAgICAgICAgICByZW5kZXJTYXRzKHNhdFBhYyk7CgogICAgICAgICAgICAgIGZ1bmN0aW9uIHJlbmRlclNhdHMoc2F0RGF0YSkgewogICAgICAgICAgICAgICAgLy8gdHJhY2tlZFBsYWNlaG9sZGVyLnRleHRDb250ZW50ID0gc2F0RGF0YS5sZW5ndGg7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygncmVuZGVyU2F0czogJywgc2F0TnVtKTsKICAgICAgICAgICAgICAgIHZhciBzYXROYW1lcyA9IFtdOwogICAgICAgICAgICAgICAgdmFyIHNhdE93bmVyID0gW107CiAgICAgICAgICAgICAgICB2YXIgc2F0RGF0ZSA9IFtdOwogICAgICAgICAgICAgICAgdmFyIHNhdFNpdGUgPSBbXTsKICAgICAgICAgICAgICAgIHZhciBzYXRTdGF0dXMgPSBbXTsKICAgICAgICAgICAgICAgIHZhciBub3cgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICAgICAgdmFyIGV2ZXJ5Q3VycmVudFBvc2l0aW9uID0gW107CgogICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBzYXROdW07IGorKykgewogICAgICAgICAgICAgICAgICB2YXIgY3VycmVudFBvc2l0aW9uID0gbnVsbDsKICAgICAgICAgICAgICAgICAgdmFyIHRpbWUgPSBuZXcgRGF0ZShub3cuZ2V0VGltZSgpKTsKCiAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHZlbG9jaXR5ID0gZ2V0VmVsb2NpdHkoc2F0ZWxsaXRlLnR3b2xpbmUyc2F0cmVjKHNhdERhdGFbal0uVExFX0xJTkUxLCBzYXREYXRhW2pdLlRMRV9MSU5FMiksIHRpbWUpOwogICAgICAgICAgICAgICAgICAgIHZhciBwb3NpdGlvbiA9IGdldFBvc2l0aW9uKHNhdGVsbGl0ZS50d29saW5lMnNhdHJlYyhzYXREYXRhW2pdLlRMRV9MSU5FMSwgc2F0RGF0YVtqXS5UTEVfTElORTIpLCB0aW1lKTsKICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyICsgJ0Vycm9yIGluIHJlbmRlclNhdHMsIHNhdCAnICsgaiArICI6ICIgKyBzYXRQYWNbal0uT0JKRUNUX05BTUUpOwogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIHNhdFZlbG9jaXR5LnB1c2godmVsb2NpdHkpOwogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRQb3NpdGlvbiA9IG5ldyBXb3JsZFdpbmQuUG9zaXRpb24ocG9zaXRpb24ubGF0aXR1ZGUsIHBvc2l0aW9uLmxvbmdpdHVkZSwgcG9zaXRpb24uYWx0aXR1ZGUpOwogICAgICAgICAgICAgICAgICAgIGV2ZXJ5Q3VycmVudFBvc2l0aW9uLnB1c2goY3VycmVudFBvc2l0aW9uKTsKICAgICAgICAgICAgICAgICAgICBzYXRTaXRlLnB1c2goc2F0RGF0YVtqXS5MQVVOQ0hfU0lURSk7CiAgICAgICAgICAgICAgICAgICAgc2F0TmFtZXMucHVzaChzYXREYXRhW2pdLk9CSkVDVF9OQU1FKTsKICAgICAgICAgICAgICAgICAgICBzYXRPd25lci5wdXNoKHNhdERhdGFbal0uT1dORVIpOwogICAgICAgICAgICAgICAgICAgIHNhdFN0YXR1cy5wdXNoKHNhdERhdGFbal0uT1BFUkFUSU9OQUxfU1RBVFVTKTsKICAgICAgICAgICAgICAgICAgICBzYXREYXRlW2pdID0gc2F0RGF0YVtqXS5MQVVOQ0hfREFURS5zdWJzdHJpbmcoMCwgNCk7CiAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVyciArICcgaW4gcmVuZGVyU2F0cywgc2F0ICcgKyBqKTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzYXREYXRhW2pdLk9CSkVDVF9OQU1FKTsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgdmFyIHBsYWNlbWFya0F0dHJpYnV0ZXMgPSBuZXcgV29ybGRXaW5kLlBsYWNlbWFya0F0dHJpYnV0ZXMobnVsbCk7CiAgICAgICAgICAgICAgICAgIHZhciBoaWdobGlnaHRQbGFjZW1hcmtBdHRyaWJ1dGVzID0gbmV3IFdvcmxkV2luZC5QbGFjZW1hcmtBdHRyaWJ1dGVzKHBsYWNlbWFya0F0dHJpYnV0ZXMpOwogICAgICAgICAgICAgICAgICBoaWdobGlnaHRQbGFjZW1hcmtBdHRyaWJ1dGVzLmltYWdlU2NhbGUgPSAwLjQ7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdMb2FkaW5nIGFzc2V0cycpOyAvL2FkZCBjb2xvcmVkIGltYWdlIGRlcGVuZGluZyBvbiBzYXQgdHlwZQoKICAgICAgICAgICAgICAgICAgc3dpdGNoIChzYXREYXRhW2pdLk9CSkVDVF9UWVBFKSB7CiAgICAgICAgICAgICAgICAgICAgY2FzZSAiUEFZTE9BRCI6CiAgICAgICAgICAgICAgICAgICAgICBwbGFjZW1hcmtBdHRyaWJ1dGVzLmltYWdlU291cmNlID0gImFzc2V0cy9pY29ucy9ibHVlX2RvdC5wbmciOwogICAgICAgICAgICAgICAgICAgICAgcGxhY2VtYXJrQXR0cmlidXRlcy5pbWFnZVNjYWxlID0gMC4zOwogICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgICAgICAgIGNhc2UgIlJPQ0tFVCBCT0RZIjoKICAgICAgICAgICAgICAgICAgICAgIHBsYWNlbWFya0F0dHJpYnV0ZXMuaW1hZ2VTb3VyY2UgPSAiYXNzZXRzL2ljb25zL3llbGxvd19kb3QucG5nIjsKICAgICAgICAgICAgICAgICAgICAgIHBsYWNlbWFya0F0dHJpYnV0ZXMuaW1hZ2VTY2FsZSA9IDAuMzsKICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAgICAgICAgICAgcGxhY2VtYXJrQXR0cmlidXRlcy5pbWFnZVNvdXJjZSA9ICJhc3NldHMvaWNvbnMvcmVkX2RvdC5wbmciOwogICAgICAgICAgICAgICAgICAgICAgcGxhY2VtYXJrQXR0cmlidXRlcy5pbWFnZVNjYWxlID0gMC4yOwogICAgICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0UGxhY2VtYXJrQXR0cmlidXRlcy5pbWFnZVNjYWxlID0gMC4zOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICBwbGFjZW1hcmtBdHRyaWJ1dGVzLmltYWdlT2Zmc2V0ID0gbmV3IFdvcmxkV2luZC5PZmZzZXQoV29ybGRXaW5kLk9GRlNFVF9GUkFDVElPTiwgMC41LCBXb3JsZFdpbmQuT0ZGU0VUX0ZSQUNUSU9OLCAwLjUpOwogICAgICAgICAgICAgICAgICBwbGFjZW1hcmtBdHRyaWJ1dGVzLmltYWdlQ29sb3IgPSBXb3JsZFdpbmQuQ29sb3IuV0hJVEU7CiAgICAgICAgICAgICAgICAgIHBsYWNlbWFya0F0dHJpYnV0ZXMubGFiZWxBdHRyaWJ1dGVzLm9mZnNldCA9IG5ldyBXb3JsZFdpbmQuT2Zmc2V0KFdvcmxkV2luZC5PRkZTRVRfRlJBQ1RJT04sIDAuNSwgV29ybGRXaW5kLk9GRlNFVF9GUkFDVElPTiwgMS4wKTsKICAgICAgICAgICAgICAgICAgcGxhY2VtYXJrQXR0cmlidXRlcy5sYWJlbEF0dHJpYnV0ZXMuY29sb3IgPSBXb3JsZFdpbmQuQ29sb3IuV0hJVEU7CiAgICAgICAgICAgICAgICAgIHZhciBwbGFjZW1hcmsgPSBuZXcgV29ybGRXaW5kLlBsYWNlbWFyayhldmVyeUN1cnJlbnRQb3NpdGlvbltqXSk7CiAgICAgICAgICAgICAgICAgIHBsYWNlbWFyay5hbHRpdHVkZU1vZGUgPSBXb3JsZFdpbmQuUkVMQVRJVkVfVE9fR1JPVU5EOwogICAgICAgICAgICAgICAgICBwbGFjZW1hcmsuYXR0cmlidXRlcyA9IHBsYWNlbWFya0F0dHJpYnV0ZXM7CiAgICAgICAgICAgICAgICAgIHBsYWNlbWFyay5oaWdobGlnaHRBdHRyaWJ1dGVzID0gaGlnaGxpZ2h0UGxhY2VtYXJrQXR0cmlidXRlczsgLy9EZWZpbmVzIG9yYml0IHJhbmdlcwoKICAgICAgICAgICAgICAgICAgaWYgKHNhdERhdGFbal0uT0JKRUNUX1RZUEUgPT09ICJQQVlMT0FEIikgewogICAgICAgICAgICAgICAgICAgIGlmIChzYXREYXRhW2pdLk9SQklUX1RZUEUgPT09ICJMb3cgRWFydGggT3JiaXQiKSB7CiAgICAgICAgICAgICAgICAgICAgICBsZW9TYXRMYXllci5hZGRSZW5kZXJhYmxlKHBsYWNlbWFyayk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzYXREYXRhW2pdLk9SQklUX1RZUEUgPT09ICJNaWRkbGUgRWFydGggT3JiaXQiKSB7CiAgICAgICAgICAgICAgICAgICAgICBtZW9TYXRMYXllci5hZGRSZW5kZXJhYmxlKHBsYWNlbWFyayk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzYXREYXRhW2pdLk9SQklUX1RZUEUgPT09ICJHZW9zeW5jaHJvbm91cyIpIHsKICAgICAgICAgICAgICAgICAgICAgIGdlb1NhdExheWVyLmFkZFJlbmRlcmFibGUocGxhY2VtYXJrKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNhdERhdGFbal0uT1JCSVRfVFlQRSA9PT0gIkhpZ2hseSBFbGxpcHRpY2FsIE9yYml0IikgewogICAgICAgICAgICAgICAgICAgICAgaGVvU2F0TGF5ZXIuYWRkUmVuZGVyYWJsZShwbGFjZW1hcmspOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc2F0RGF0YVtqXS5PUkJJVF9UWVBFID09PSAiVW5jbGFzc2lmaWVkIikgey8vdW5jbGFzc2lmaWVkU2F0TGF5ZXIuYWRkUmVuZGVyYWJsZShwbGFjZW1hcmspOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzYXREYXRhW2pdLk9SQklUX1RZUEUpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzYXREYXRhW2pdLk9CSkVDVF9UWVBFID09PSAiREVCUklTIikgewogICAgICAgICAgICAgICAgICAgIGlmIChzYXREYXRhW2pdLk9SQklUX1RZUEUgPT09ICJMb3cgRWFydGggT3JiaXQiKSB7CiAgICAgICAgICAgICAgICAgICAgICBsZW9EZWJyaXNMYXllci5hZGRSZW5kZXJhYmxlKHBsYWNlbWFyayk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzYXREYXRhW2pdLk9SQklUX1RZUEUgPT09ICJNaWRkbGUgRWFydGggT3JiaXQiKSB7CiAgICAgICAgICAgICAgICAgICAgICBtZW9EZWJyaXNMYXllci5hZGRSZW5kZXJhYmxlKHBsYWNlbWFyayk7CiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChzYXREYXRhW2pdLk9SQklUX1RZUEUgPT09ICJHZW9zeW5jaHJvbm91cyIpIHsKICAgICAgICAgICAgICAgICAgICAgIGdlb0RlYnJpc0xheWVyLmFkZFJlbmRlcmFibGUocGxhY2VtYXJrKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHNhdERhdGFbal0uT1JCSVRfVFlQRSA9PT0gIkhpZ2hseSBFbGxpcHRpY2FsIE9yYml0IikgewogICAgICAgICAgICAgICAgICAgICAgaGVvRGVicmlzTGF5ZXIuYWRkUmVuZGVyYWJsZShwbGFjZW1hcmspOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc2F0RGF0YVtqXS5PUkJJVF9UWVBFID09PSAiVW5jbGFzc2lmaWVkIikgey8vdW5jbGFzc2lmaWVkRGVicmlzTGF5ZXIuYWRkUmVuZGVyYWJsZShwbGFjZW1hcmspOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhzYXREYXRhW2pdLk9SQklUX1RZUEUpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSAvL0VuZCBvZiBmb3IgICAgICAgICAgICAgICAgIAoKCiAgICAgICAgICAgICAgICB3d2QucmVkcmF3KCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9OwoKICAgICAgICAgICAgc2FuaXRpemVTYXRlbGxpdGVzID0gZnVuY3Rpb24gX3Nhbml0aXplU2F0ZWxsaXRlcyhvYmplY3RBcnJheSkgewogICAgICAgICAgICAgIHZhciBmYXVsdHlTYXRlbGxpdGVzID0gMDsKICAgICAgICAgICAgICB2YXIgcmVzdWx0QXJyYXkgPSBbXTsKICAgICAgICAgICAgICB2YXIgbWF4U2F0cyA9IG9iamVjdEFycmF5Lmxlbmd0aDsKICAgICAgICAgICAgICB2YXIgdXBkYXRlVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKHVwZGF0ZVRpbWUpOwogICAgICAgICAgICAgIHZhciBub3cgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICAgIHZhciB0aW1lID0gbmV3IERhdGUobm93LmdldFRpbWUoKSk7CgogICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbWF4U2F0czsgaSArPSAxKSB7CiAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICB2YXIgcG9zaXRpb24gPSBnZXRQb3NpdGlvbihzYXRlbGxpdGUudHdvbGluZTJzYXRyZWMob2JqZWN0QXJyYXlbaV0uVExFX0xJTkUxLCBvYmplY3RBcnJheVtpXS5UTEVfTElORTIpLCB0aW1lKTsKICAgICAgICAgICAgICAgICAgdmFyIHZlbG9jaXR5ID0gZ2V0VmVsb2NpdHkoc2F0ZWxsaXRlLnR3b2xpbmUyc2F0cmVjKG9iamVjdEFycmF5W2ldLlRMRV9MSU5FMSwgb2JqZWN0QXJyYXlbaV0uVExFX0xJTkUyKSwgdGltZSk7CiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cob2JqZWN0QXJyYXlbaV0uT0JKRUNUX05BTUUgKyIgaXMgYSBmYXVsdHkgc2F0IGl0IGlzICIgKyBpKTsKICAgICAgICAgICAgICAgICAgZmF1bHR5U2F0ZWxsaXRlcyArPSAxOwogICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnb2JqZWN0QXJyYXlbaV06ICcsIG9iamVjdEFycmF5W2ldLkxBVU5DSF9EQVRFKTsKICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygb2JqZWN0QXJyYXlbaV0uTEFVTkNIX0RBVEUgPT09ICJ1bmRlZmluZWQiKSBjb250aW51ZTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdKQUpBLCBpdCB3b3JrZWQhJyk7CiAgICAgICAgICAgICAgICByZXN1bHRBcnJheS5wdXNoKG9iamVjdEFycmF5W2ldKTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdvYmplY3RBcnJheVtpXTogJywgb2JqZWN0QXJyYXlbMF0pOwogICAgICAgICAgICAgIHBvc2l0aW9uID0gZ2V0UG9zaXRpb24oc2F0ZWxsaXRlLnR3b2xpbmUyc2F0cmVjKG9iamVjdEFycmF5WzBdLlRMRV9MSU5FMSwgb2JqZWN0QXJyYXlbMF0uVExFX0xJTkUyKSwgdGltZSk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3Bvc2l0aW9uOiAnLCBwb3NpdGlvbik7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3ZlbG9jaXR5OiAnLCB2ZWxvY2l0eSk7CiAgICAgICAgICAgICAgdXBkYXRlVGltZSA9IHBlcmZvcm1hbmNlLm5vdygpIC0gdXBkYXRlVGltZTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZmF1bHR5U2F0ZWxsaXRlczogJywgZmF1bHR5U2F0ZWxsaXRlcyk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2cob2JqZWN0QXJyYXkubGVuZ3RoICsgIiBmcm9tIHVuY2xlYW5zZWQiKTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRBcnJheS5sZW5ndGggKyAiIGZyb20gY2xlYW5zZWQiKTsKICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0QXJyYXk7CiAgICAgICAgICAgIH07CgogICAgICAgICAgICBnZXRWZWxvY2l0eSA9IGZ1bmN0aW9uIF9nZXRWZWxvY2l0eShzYXRyZWMsIHRpbWUpIHsKICAgICAgICAgICAgICB2YXIgaiA9IGpkYXkodGltZS5nZXRVVENGdWxsWWVhcigpLCB0aW1lLmdldFVUQ01vbnRoKCkgKyAxLCAvLyBOb3RlLCB0aGlzIGZ1bmN0aW9uIHJlcXVpcmVzIG1vbnRocyBpbiByYW5nZSAxLTEyLgogICAgICAgICAgICAgIHRpbWUuZ2V0VVRDRGF0ZSgpLCB0aW1lLmdldFVUQ0hvdXJzKCksIHRpbWUuZ2V0VVRDTWludXRlcygpLCB0aW1lLmdldFVUQ1NlY29uZHMoKSk7CiAgICAgICAgICAgICAgaiArPSB0aW1lLmdldFVUQ01pbGxpc2Vjb25kcygpICogMS4xNTc0MWUtODsKICAgICAgICAgICAgICB2YXIgbSA9IChqIC0gc2F0cmVjLmpkc2F0ZXBvY2gpICogMTQ0MC4wOwogICAgICAgICAgICAgIHZhciBwdiA9IHNhdGVsbGl0ZS5zZ3A0KHNhdHJlYywgbSk7CiAgICAgICAgICAgICAgdmFyIHZ4LCB2eSwgdno7CiAgICAgICAgICAgICAgdnggPSBwdi52ZWxvY2l0eS54OwogICAgICAgICAgICAgIHZ5ID0gcHYudmVsb2NpdHkueTsKICAgICAgICAgICAgICB2eiA9IHB2LnZlbG9jaXR5Lno7CiAgICAgICAgICAgICAgdmFyIHNhdFZlbG9jaXR5ID0gTWF0aC5zcXJ0KHZ4ICogdnggKyB2eSAqIHZ5ICsgdnogKiB2eik7CiAgICAgICAgICAgICAgcmV0dXJuIHNhdFZlbG9jaXR5OwogICAgICAgICAgICB9OwoKICAgICAgICAgICAgamRheSA9IGZ1bmN0aW9uIF9qZGF5KHllYXIsIG1vbiwgZGF5LCBociwgbWludXRlLCBzZWMpIHsKICAgICAgICAgICAgICAndXNlIHN0cmljdCc7CgogICAgICAgICAgICAgIHJldHVybiAzNjcuMCAqIHllYXIgLSBNYXRoLmZsb29yKDcgKiAoeWVhciArIE1hdGguZmxvb3IoKG1vbiArIDkpIC8gMTIuMCkpICogMC4yNSkgKyBNYXRoLmZsb29yKDI3NSAqIG1vbiAvIDkuMCkgKyBkYXkgKyAxNzIxMDEzLjUgKyAoKHNlYyAvIDYwLjAgKyBtaW51dGUpIC8gNjAuMCArIGhyKSAvIDI0LjAgLy8gIHV0IGluIGRheXMKICAgICAgICAgICAgICAvLyMgIC0gMC41KnNnbigxMDAuMCp5ZWFyICsgbW9uIC0gMTkwMDAyLjUpICsgMC41OwogICAgICAgICAgICAgIDsKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIGdldFBvc2l0aW9uID0gZnVuY3Rpb24gX2dldFBvc2l0aW9uKHNhdHJlYywgdGltZSkgewogICAgICAgICAgICAgIHZhciBwb3NpdGlvbl9hbmRfdmVsb2NpdHkgPSBzYXRlbGxpdGUucHJvcGFnYXRlKHNhdHJlYywgdGltZS5nZXRVVENGdWxsWWVhcigpLCB0aW1lLmdldFVUQ01vbnRoKCkgKyAxLCB0aW1lLmdldFVUQ0RhdGUoKSwgdGltZS5nZXRVVENIb3VycygpLCB0aW1lLmdldFVUQ01pbnV0ZXMoKSwgdGltZS5nZXRVVENTZWNvbmRzKCkpOwogICAgICAgICAgICAgIHZhciBwb3NpdGlvbl9lY2kgPSBwb3NpdGlvbl9hbmRfdmVsb2NpdHlbInBvc2l0aW9uIl07CiAgICAgICAgICAgICAgdmFyIGdtc3QgPSBzYXRlbGxpdGUuZ3N0aW1lX2Zyb21fZGF0ZSh0aW1lLmdldFVUQ0Z1bGxZZWFyKCksIHRpbWUuZ2V0VVRDTW9udGgoKSArIDEsIHRpbWUuZ2V0VVRDRGF0ZSgpLCB0aW1lLmdldFVUQ0hvdXJzKCksIHRpbWUuZ2V0VVRDTWludXRlcygpLCB0aW1lLmdldFVUQ1NlY29uZHMoKSk7CiAgICAgICAgICAgICAgdmFyIHBvc2l0aW9uX2dkID0gc2F0ZWxsaXRlLmVjaV90b19nZW9kZXRpYyhwb3NpdGlvbl9lY2ksIGdtc3QpOwogICAgICAgICAgICAgIHZhciBsYXRpdHVkZSA9IHNhdGVsbGl0ZS5kZWdyZWVzX2xhdChwb3NpdGlvbl9nZFsibGF0aXR1ZGUiXSk7CiAgICAgICAgICAgICAgdmFyIGxvbmdpdHVkZSA9IHNhdGVsbGl0ZS5kZWdyZWVzX2xvbmcocG9zaXRpb25fZ2RbImxvbmdpdHVkZSJdKTsKICAgICAgICAgICAgICB2YXIgYWx0aXR1ZGUgPSBwb3NpdGlvbl9nZFsiaGVpZ2h0Il0gKiAxMDAwOwogICAgICAgICAgICAgIHJldHVybiBuZXcgV29ybGRXaW5kLlBvc2l0aW9uKGxhdGl0dWRlLCBsb25naXR1ZGUsIGFsdGl0dWRlKTsKICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIC8vIENyZWF0ZSBhIFdvcmxkV2luZG93IGZvciB0aGUgY2FudmFzLgogICAgICAgICAgICB3d2QgPSBuZXcgV29ybGRXaW5kLldvcmxkV2luZG93KCJjYW52YXNPbmUiKTsKICAgICAgICAgICAgd3dkLmFkZExheWVyKG5ldyBXb3JsZFdpbmQuQk1OR09uZUltYWdlTGF5ZXIoKSk7CiAgICAgICAgICAgIHd3ZC5hZGRMYXllcihuZXcgV29ybGRXaW5kLkJNTkdMYXllcigpKTsgLy8gQWRkaW5nIHN0YXIgYW5kIGF0bW9zcGhlcmUgbGF5ZXI6ICAgIAoKICAgICAgICAgICAgc3RhckZpZWxkTGF5ZXIgPSBuZXcgV29ybGRXaW5kLlN0YXJGaWVsZExheWVyKCk7CiAgICAgICAgICAgIHd3ZC5hZGRMYXllcihzdGFyRmllbGRMYXllcik7CiAgICAgICAgICAgIGF0bW9zcGhlcmVMYXllciA9IG5ldyBXb3JsZFdpbmQuQXRtb3NwaGVyZUxheWVyKCk7CiAgICAgICAgICAgIHd3ZC5hZGRMYXllcihhdG1vc3BoZXJlTGF5ZXIpOwogICAgICAgICAgICBub3cgPSBuZXcgRGF0ZSgpOwogICAgICAgICAgICBzdGFyRmllbGRMYXllci50aW1lID0gbm93OwogICAgICAgICAgICBhdG1vc3BoZXJlTGF5ZXIudGltZSA9IG5vdzsKICAgICAgICAgICAgY29tcGFzc0xheWVyID0gbmV3IFdvcmxkV2luZC5Db21wYXNzTGF5ZXIoKTsKICAgICAgICAgICAgd3dkLmFkZExheWVyKGNvbXBhc3NMYXllcik7CiAgICAgICAgICAgIHd3ZC5hZGRMYXllcihuZXcgV29ybGRXaW5kLkNvb3JkaW5hdGVzRGlzcGxheUxheWVyKHd3ZCkpOyAvLyBBZGRpbmcgY3VzdG9tIGxheWVycwoKICAgICAgICAgICAgb3JiaXRzSG92ZXJMYXllciA9IG5ldyBXb3JsZFdpbmQuUmVuZGVyYWJsZUxheWVyKCk7CiAgICAgICAgICAgIG1vZGVsTGF5ZXIgPSBuZXcgV29ybGRXaW5kLlJlbmRlcmFibGVMYXllcigiTW9kZWwiKTsKICAgICAgICAgICAgbWVzaExheWVyID0gbmV3IFdvcmxkV2luZC5SZW5kZXJhYmxlTGF5ZXIoKTsKICAgICAgICAgICAgb3JiaXRzTGF5ZXIgPSBuZXcgV29ybGRXaW5kLlJlbmRlcmFibGVMYXllcigiT3JiaXQiKTsKICAgICAgICAgICAgbGVvU2F0TGF5ZXIgPSBuZXcgV29ybGRXaW5kLlJlbmRlcmFibGVMYXllcigiTEVPIFBheWxvYWRzIik7CiAgICAgICAgICAgIG1lb1NhdExheWVyID0gbmV3IFdvcmxkV2luZC5SZW5kZXJhYmxlTGF5ZXIoIk1FTyBQYXlsb2FkcyIpOwogICAgICAgICAgICBoZW9TYXRMYXllciA9IG5ldyBXb3JsZFdpbmQuUmVuZGVyYWJsZUxheWVyKCJIRU8gUGF5bG9hZHMiKTsKICAgICAgICAgICAgZ2VvU2F0TGF5ZXIgPSBuZXcgV29ybGRXaW5kLlJlbmRlcmFibGVMYXllcigiR0VPIFBheWxvYWRzIik7CiAgICAgICAgICAgIGxlb0RlYnJpc0xheWVyID0gbmV3IFdvcmxkV2luZC5SZW5kZXJhYmxlTGF5ZXIoIkxFTyBEZWJyaXMiKTsKICAgICAgICAgICAgbWVvRGVicmlzTGF5ZXIgPSBuZXcgV29ybGRXaW5kLlJlbmRlcmFibGVMYXllcigiTUVPIERlYnJpcyIpOwogICAgICAgICAgICBoZW9EZWJyaXNMYXllciA9IG5ldyBXb3JsZFdpbmQuUmVuZGVyYWJsZUxheWVyKCJIRU8gRGVicmlzIik7CiAgICAgICAgICAgIGdlb0RlYnJpc0xheWVyID0gbmV3IFdvcmxkV2luZC5SZW5kZXJhYmxlTGF5ZXIoIkdFTyBEZWJyaXMiKTsKICAgICAgICAgICAgd3dkLmFkZExheWVyKG9yYml0c0hvdmVyTGF5ZXIpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIobGVvU2F0TGF5ZXIpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIobWVvU2F0TGF5ZXIpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIoaGVvU2F0TGF5ZXIpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIoZ2VvU2F0TGF5ZXIpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIobGVvRGVicmlzTGF5ZXIpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIobWVvRGVicmlzTGF5ZXIpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIoaGVvRGVicmlzTGF5ZXIpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIoZ2VvRGVicmlzTGF5ZXIpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIobWVzaExheWVyKTsKICAgICAgICAgICAgd3dkLmFkZExheWVyKG1vZGVsTGF5ZXIpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIob3JiaXRzTGF5ZXIpOyAvLyBHZXQgcG9zaXRpb24gb2YgZXZlcnkgc2F0ZWxsaXRlCgogICAgICAgICAgICBzYXRWZWxvY2l0eSA9IFtdOwogICAgICAgICAgICBnZXRTYXRlbGxpdGVzKFRMRV9EQVRBKTsKICAgICAgICAgICAgLy92YXIgbGF5ZXJNYW5nZXIgPSBuZXcgTGF5ZXJNYW5hZ2VyKHd3ZCk7CiAgICAgICAgICAgIHd3ZC5yZWRyYXcoKTsKCiAgICAgICAgICBjYXNlIDQ1OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGxhdW5jaEdsb2JlKCkgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7"},{"version":3,"sources":["/home/avocado/Documents/NASA/01_space_tracker_ui/src/services/WorldWindService.js"],"names":["WorldWind","satellite","require","TLE_DATA","launchGlobe","getPosition","jday","getVelocity","sanitizeSatellites","getSatellites","satellites","satPac","satDataString","JSON","stringify","leoSatLayer","enabled","leoDebrisLayer","meoSatLayer","meoDebrisLayer","heoSatLayer","heoDebrisLayer","geoSatLayer","geoDebrisLayer","satNum","length","renderSats","satData","console","log","satNames","satOwner","satDate","satSite","satStatus","now","Date","everyCurrentPosition","j","currentPosition","time","getTime","velocity","twoline2satrec","TLE_LINE1","TLE_LINE2","position","err","OBJECT_NAME","satVelocity","push","Position","latitude","longitude","altitude","LAUNCH_SITE","OWNER","OPERATIONAL_STATUS","LAUNCH_DATE","substring","placemarkAttributes","PlacemarkAttributes","highlightPlacemarkAttributes","imageScale","OBJECT_TYPE","imageSource","imageOffset","Offset","OFFSET_FRACTION","imageColor","Color","WHITE","labelAttributes","offset","color","placemark","Placemark","altitudeMode","RELATIVE_TO_GROUND","attributes","highlightAttributes","ORBIT_TYPE","addRenderable","wwd","redraw","objectArray","faultySatellites","resultArray","maxSats","updateTime","performance","i","satrec","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","m","jdsatepoch","pv","sgp4","vx","vy","vz","x","y","z","Math","sqrt","year","mon","day","hr","minute","sec","floor","position_and_velocity","propagate","position_eci","gmst","gstime_from_date","position_gd","eci_to_geodetic","degrees_lat","degrees_long","WorldWindow","addLayer","BMNGOneImageLayer","BMNGLayer","starFieldLayer","StarFieldLayer","atmosphereLayer","AtmosphereLayer","compassLayer","CompassLayer","CoordinatesDisplayLayer","orbitsHoverLayer","RenderableLayer","modelLayer","meshLayer","orbitsLayer"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,0BAAtB;;AACA,IAAIC,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAvB,C,CACA;;;AACA,OAAOC,QAAP,MAAqB,uBAArB;AAGA,OAAO,IAAMC,WAAW;AAAA,qEAAG;AAAA,2OAuDdC,WAvDc,EAgFdC,IAhFc,eA4FdC,WA5Fc,EAwHdC,kBAxHc,EAgKdC,aAhKc;AAAA;AAAA;AAAA;AAAA;AAgKdA,YAAAA,aAhKc,2BAgKAC,UAhKA,EAgKY;AAC/B,kBAAIC,MAAM,GAAGH,kBAAkB,CAACE,UAAD,CAA/B;AACAC,cAAAA,MAAM,CAACC,aAAP,GAAuBC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAvB;AAEAI,cAAAA,WAAW,CAACC,OAAZ,GAAsB,IAAtB;AACAC,cAAAA,cAAc,CAACD,OAAf,GAAyB,IAAzB;AAEAE,cAAAA,WAAW,CAACF,OAAZ,GAAsB,IAAtB;AACAG,cAAAA,cAAc,CAACH,OAAf,GAAyB,IAAzB;AAEAI,cAAAA,WAAW,CAACJ,OAAZ,GAAsB,IAAtB;AACAK,cAAAA,cAAc,CAACL,OAAf,GAAyB,IAAzB;AAEAM,cAAAA,WAAW,CAACN,OAAZ,GAAsB,IAAtB;AACAO,cAAAA,cAAc,CAACP,OAAf,GAAyB,IAAzB;AAEA,kBAAIQ,MAAM,GAAGb,MAAM,CAACc,MAApB;AAEA;AACA;;AACAC,cAAAA,UAAU,CAACf,MAAD,CAAV;;AAGA,uBAASe,UAAT,CAAoBC,OAApB,EAA6B;AAC3B;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,MAA5B;AACA,oBAAIM,QAAQ,GAAG,EAAf;AACA,oBAAIC,QAAQ,GAAG,EAAf;AACA,oBAAIC,OAAO,GAAG,EAAd;AACA,oBAAIC,OAAO,GAAG,EAAd;AACA,oBAAIC,SAAS,GAAG,EAAhB;AACA,oBAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,oBAAIC,oBAAoB,GAAG,EAA3B;;AAGA,qBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,MAApB,EAA4Bc,CAAC,EAA7B,EAAiC;AAE/B,sBAAIC,eAAe,GAAG,IAAtB;AACA,sBAAIC,IAAI,GAAG,IAAIJ,IAAJ,CAASD,GAAG,CAACM,OAAJ,EAAT,CAAX;;AAEA,sBAAI;AACF,wBAAIC,QAAQ,GAAGnC,WAAW,CAACN,SAAS,CAAC0C,cAAV,CAAyBhB,OAAO,CAACW,CAAD,CAAP,CAAWM,SAApC,EAA+CjB,OAAO,CAACW,CAAD,CAAP,CAAWO,SAA1D,CAAD,EAAuEL,IAAvE,CAA1B;AACA,wBAAIM,QAAQ,GAAGzC,WAAW,CAACJ,SAAS,CAAC0C,cAAV,CAAyBhB,OAAO,CAACW,CAAD,CAAP,CAAWM,SAApC,EAA+CjB,OAAO,CAACW,CAAD,CAAP,CAAWO,SAA1D,CAAD,EAAuEL,IAAvE,CAA1B;AACD,mBAHD,CAGE,OAAOO,GAAP,EAAY;AACZnB,oBAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAG,GAAG,2BAAN,GAAoCT,CAApC,GAAyC,IAAzC,GAAgD3B,MAAM,CAAC2B,CAAD,CAAN,CAAUU,WAAtE;AACA;AACD;;AAGD,sBAAI;AACAC,oBAAAA,WAAW,CAACC,IAAZ,CAAiBR,QAAjB;AACAH,oBAAAA,eAAe,GAAG,IAAIvC,SAAS,CAACmD,QAAd,CAAuBL,QAAQ,CAACM,QAAhC,EAClBN,QAAQ,CAACO,SADS,EAElBP,QAAQ,CAACQ,QAFS,CAAlB;AAGAjB,oBAAAA,oBAAoB,CAACa,IAArB,CAA0BX,eAA1B;AACAN,oBAAAA,OAAO,CAACiB,IAAR,CAAavB,OAAO,CAACW,CAAD,CAAP,CAAWiB,WAAxB;AACAzB,oBAAAA,QAAQ,CAACoB,IAAT,CAAcvB,OAAO,CAACW,CAAD,CAAP,CAAWU,WAAzB;AACAjB,oBAAAA,QAAQ,CAACmB,IAAT,CAAcvB,OAAO,CAACW,CAAD,CAAP,CAAWkB,KAAzB;AACAtB,oBAAAA,SAAS,CAACgB,IAAV,CAAevB,OAAO,CAACW,CAAD,CAAP,CAAWmB,kBAA1B;AACAzB,oBAAAA,OAAO,CAACM,CAAD,CAAP,GAAaX,OAAO,CAACW,CAAD,CAAP,CAAWoB,WAAX,CAAuBC,SAAvB,CAAiC,CAAjC,EAAoC,CAApC,CAAb;AACH,mBAXD,CAWE,OAAOZ,GAAP,EAAY;AACVnB,oBAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAG,GAAG,sBAAN,GAA+BT,CAA3C;AACAV,oBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACW,CAAD,CAAP,CAAWU,WAAvB;AACF;AACD;;AAGD,sBAAIY,mBAAmB,GAAG,IAAI5D,SAAS,CAAC6D,mBAAd,CAAkC,IAAlC,CAA1B;AACA,sBAAIC,4BAA4B,GAAG,IAAI9D,SAAS,CAAC6D,mBAAd,CAAkCD,mBAAlC,CAAnC;AACAE,kBAAAA,4BAA4B,CAACC,UAA7B,GAA0C,GAA1C;AAEAnC,kBAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EApC+B,CAqC/B;;AACA,0BAAQF,OAAO,CAACW,CAAD,CAAP,CAAW0B,WAAnB;AACE,yBAAK,SAAL;AACEJ,sBAAAA,mBAAmB,CAACK,WAApB,GAAkC,2BAAlC;AACAL,sBAAAA,mBAAmB,CAACG,UAApB,GAAiC,GAAjC;AACA;;AACF,yBAAK,aAAL;AACEH,sBAAAA,mBAAmB,CAACK,WAApB,GAAkC,6BAAlC;AACAL,sBAAAA,mBAAmB,CAACG,UAApB,GAAiC,GAAjC;AACA;;AACF;AACEH,sBAAAA,mBAAmB,CAACK,WAApB,GAAkC,0BAAlC;AACAL,sBAAAA,mBAAmB,CAACG,UAApB,GAAiC,GAAjC;AACAD,sBAAAA,4BAA4B,CAACC,UAA7B,GAA0C,GAA1C;AAZJ;;AAeAH,kBAAAA,mBAAmB,CAACM,WAApB,GAAkC,IAAIlE,SAAS,CAACmE,MAAd,CAChCnE,SAAS,CAACoE,eADsB,EACL,GADK,EAEhCpE,SAAS,CAACoE,eAFsB,EAEL,GAFK,CAAlC;AAGAR,kBAAAA,mBAAmB,CAACS,UAApB,GAAiCrE,SAAS,CAACsE,KAAV,CAAgBC,KAAjD;AACAX,kBAAAA,mBAAmB,CAACY,eAApB,CAAoCC,MAApC,GAA6C,IAAIzE,SAAS,CAACmE,MAAd,CAC3CnE,SAAS,CAACoE,eADiC,EAChB,GADgB,EAE3CpE,SAAS,CAACoE,eAFiC,EAEhB,GAFgB,CAA7C;AAGAR,kBAAAA,mBAAmB,CAACY,eAApB,CAAoCE,KAApC,GAA4C1E,SAAS,CAACsE,KAAV,CAAgBC,KAA5D;AAGA,sBAAII,SAAS,GAAG,IAAI3E,SAAS,CAAC4E,SAAd,CAAwBvC,oBAAoB,CAACC,CAAD,CAA5C,CAAhB;AACAqC,kBAAAA,SAAS,CAACE,YAAV,GAAyB7E,SAAS,CAAC8E,kBAAnC;AACAH,kBAAAA,SAAS,CAACI,UAAV,GAAuBnB,mBAAvB;AACAe,kBAAAA,SAAS,CAACK,mBAAV,GAAgClB,4BAAhC,CAlE+B,CAoE/B;;AACA,sBAAInC,OAAO,CAACW,CAAD,CAAP,CAAW0B,WAAX,KAA2B,SAA/B,EAA0C;AACxC,wBAAIrC,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,iBAA9B,EAAiD;AAC/ClE,sBAAAA,WAAW,CAACmE,aAAZ,CAA0BP,SAA1B;AACD,qBAFD,MAEO,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,oBAA9B,EAAoD;AACzD/D,sBAAAA,WAAW,CAACgE,aAAZ,CAA0BP,SAA1B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,gBAA9B,EAAgD;AACrD3D,sBAAAA,WAAW,CAAC4D,aAAZ,CAA0BP,SAA1B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,yBAA9B,EAAyD;AAC9D7D,sBAAAA,WAAW,CAAC8D,aAAZ,CAA0BP,SAA1B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,cAA9B,EAA8C,CACnD;AACD,qBAFM,MAEA;AACLrD,sBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAvB;AACD;AACF,mBAdD,MAcO,IAAItD,OAAO,CAACW,CAAD,CAAP,CAAW0B,WAAX,KAA2B,QAA/B,EAAyC;AAC9C,wBAAIrC,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,iBAA9B,EAAiD;AAC/ChE,sBAAAA,cAAc,CAACiE,aAAf,CAA6BP,SAA7B;AACD,qBAFD,MAEO,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,oBAA9B,EAAoD;AACzD9D,sBAAAA,cAAc,CAAC+D,aAAf,CAA6BP,SAA7B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,gBAA9B,EAAgD;AACrD1D,sBAAAA,cAAc,CAAC2D,aAAf,CAA6BP,SAA7B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,yBAA9B,EAAyD;AAC9D5D,sBAAAA,cAAc,CAAC6D,aAAf,CAA6BP,SAA7B;AACD,qBAFM,MAEA,IAAIhD,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAX,KAA0B,cAA9B,EAA8C,CACnD;AACD,qBAFM,MAEA;AACLrD,sBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACW,CAAD,CAAP,CAAW2C,UAAvB;AACD;AACF;AACF,iBA9G0B,CA8GzB;;;AAEFE,gBAAAA,GAAG,CAACC,MAAJ;AACD;AACF,aAzSoB;;AAwHd5E,YAAAA,kBAxHc,gCAwHK6E,WAxHL,EAwHkB;AACrC,kBAAIC,gBAAgB,GAAG,CAAvB;AACA,kBAAIC,WAAW,GAAG,EAAlB;AACA,kBAAIC,OAAO,GAAGH,WAAW,CAAC5D,MAA1B;AACA,kBAAIgE,UAAU,GAAGC,WAAW,CAACvD,GAAZ,EAAjB;AACAP,cAAAA,OAAO,CAACC,GAAR,CAAY4D,UAAZ;AACA,kBAAItD,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,kBAAII,IAAI,GAAG,IAAIJ,IAAJ,CAASD,GAAG,CAACM,OAAJ,EAAT,CAAX;;AACA,mBAAK,IAAIkD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAApB,EAA6BG,CAAC,IAAI,CAAlC,EAAqC;AAEjC,oBAAI;AACA,sBAAI7C,QAAQ,GAAGzC,WAAW,CAACJ,SAAS,CAAC0C,cAAV,CAAyB0C,WAAW,CAACM,CAAD,CAAX,CAAe/C,SAAxC,EAAmDyC,WAAW,CAACM,CAAD,CAAX,CAAe9C,SAAlE,CAAD,EAA+EL,IAA/E,CAA1B;AACA,sBAAIE,QAAQ,GAAGnC,WAAW,CAACN,SAAS,CAAC0C,cAAV,CAAyB0C,WAAW,CAACM,CAAD,CAAX,CAAe/C,SAAxC,EAAmDyC,WAAW,CAACM,CAAD,CAAX,CAAe9C,SAAlE,CAAD,EAA+EL,IAA/E,CAA1B;AAEH,iBAJD,CAIE,OAAOO,GAAP,EAAY;AACV;AACAuC,kBAAAA,gBAAgB,IAAI,CAApB;AACA;AACH;;AAED1D,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCwD,WAAW,CAACM,CAAD,CAAX,CAAejC,WAA/C;AACA,oBAAG,OAAO2B,WAAW,CAACM,CAAD,CAAX,CAAejC,WAAtB,KAAsC,WAAzC,EAAsD;AACtD9B,gBAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA0D,gBAAAA,WAAW,CAACrC,IAAZ,CAAiBmC,WAAW,CAACM,CAAD,CAA5B;AACH;;AACD/D,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCwD,WAAW,CAAC,CAAD,CAA3C;AACAvC,cAAAA,QAAQ,GAAGzC,WAAW,CAACJ,SAAS,CAAC0C,cAAV,CAAyB0C,WAAW,CAAC,CAAD,CAAX,CAAezC,SAAxC,EAAmDyC,WAAW,CAAC,CAAD,CAAX,CAAexC,SAAlE,CAAD,EAA+EL,IAA/E,CAAtB;AAEAZ,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BiB,QAA1B;AACAlB,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Ba,QAA1B;AACA+C,cAAAA,UAAU,GAAGC,WAAW,CAACvD,GAAZ,KAAoBsD,UAAjC;AACA7D,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCyD,gBAAjC;AACA1D,cAAAA,OAAO,CAACC,GAAR,CAAYwD,WAAW,CAAC5D,MAAZ,GAAqB,kBAAjC;AACAG,cAAAA,OAAO,CAACC,GAAR,CAAY0D,WAAW,CAAC9D,MAAZ,GAAqB,gBAAjC;AACA,qBAAO8D,WAAP;AACH,aA5JsB;;AA4FdhF,YAAAA,WA5Fc,yBA4FFqF,MA5FE,EA4FMpD,IA5FN,EA4FY;AAE/B,kBAAIF,CAAC,GAAGhC,IAAI,CAACkC,IAAI,CAACqD,cAAL,EAAD,EACZrD,IAAI,CAACsD,WAAL,KAAqB,CADT,EACY;AACxBtD,cAAAA,IAAI,CAACuD,UAAL,EAFY,EAGZvD,IAAI,CAACwD,WAAL,EAHY,EAIZxD,IAAI,CAACyD,aAAL,EAJY,EAKZzD,IAAI,CAAC0D,aAAL,EALY,CAAZ;AAMA5D,cAAAA,CAAC,IAAIE,IAAI,CAAC2D,kBAAL,KAA4B,UAAjC;AAGA,kBAAIC,CAAC,GAAG,CAAC9D,CAAC,GAAGsD,MAAM,CAACS,UAAZ,IAA0B,MAAlC;AACA,kBAAIC,EAAE,GAAGrG,SAAS,CAACsG,IAAV,CAAeX,MAAf,EAAuBQ,CAAvB,CAAT;AACA,kBAAII,EAAJ,EAAQC,EAAR,EAAYC,EAAZ;AAEAF,cAAAA,EAAE,GAAGF,EAAE,CAAC5D,QAAH,CAAYiE,CAAjB;AACAF,cAAAA,EAAE,GAAGH,EAAE,CAAC5D,QAAH,CAAYkE,CAAjB;AACAF,cAAAA,EAAE,GAAGJ,EAAE,CAAC5D,QAAH,CAAYmE,CAAjB;AAEA,kBAAI5D,WAAW,GAAG6D,IAAI,CAACC,IAAL,CACdP,EAAE,GAAGA,EAAL,GACAC,EAAE,GAAGA,EADL,GAEAC,EAAE,GAAGA,EAHS,CAAlB;AAKA,qBAAOzD,WAAP;AACH,aArHsB;;AAgFd3C,YAAAA,IAhFc,kBAgFT0G,IAhFS,EAgFHC,GAhFG,EAgFEC,GAhFF,EAgFOC,EAhFP,EAgFWC,MAhFX,EAgFmBC,GAhFnB,EAgFwB;AAC3C;;AACA,qBAAQ,QAAQL,IAAR,GACNF,IAAI,CAACQ,KAAL,CAAY,KAAKN,IAAI,GAAGF,IAAI,CAACQ,KAAL,CAAW,CAACL,GAAG,GAAG,CAAP,IAAY,IAAvB,CAAZ,CAAD,GAA8C,IAAzD,CADM,GAENH,IAAI,CAACQ,KAAL,CAAW,MAAML,GAAN,GAAY,GAAvB,CAFM,GAGNC,GAHM,GAGA,SAHA,GAIN,CAAC,CAACG,GAAG,GAAG,IAAN,GAAaD,MAAd,IAAwB,IAAxB,GAA+BD,EAAhC,IAAsC,IAJxC,CAI8C;AAC5C;AALF;AAOH,aAzFsB;;AAuDd9G,YAAAA,WAvDc,yBAuDFuF,MAvDE,EAuDMpD,IAvDN,EAuDY;AAC/B,kBAAI+E,qBAAqB,GAAGtH,SAAS,CAACuH,SAAV,CAAoB5B,MAApB,EAC5BpD,IAAI,CAACqD,cAAL,EAD4B,EAE5BrD,IAAI,CAACsD,WAAL,KAAqB,CAFO,EAG5BtD,IAAI,CAACuD,UAAL,EAH4B,EAI5BvD,IAAI,CAACwD,WAAL,EAJ4B,EAK5BxD,IAAI,CAACyD,aAAL,EAL4B,EAM5BzD,IAAI,CAAC0D,aAAL,EAN4B,CAA5B;AAOA,kBAAIuB,YAAY,GAAGF,qBAAqB,CAAC,UAAD,CAAxC;AAEA,kBAAIG,IAAI,GAAGzH,SAAS,CAAC0H,gBAAV,CAA2BnF,IAAI,CAACqD,cAAL,EAA3B,EACXrD,IAAI,CAACsD,WAAL,KAAqB,CADV,EAEXtD,IAAI,CAACuD,UAAL,EAFW,EAGXvD,IAAI,CAACwD,WAAL,EAHW,EAIXxD,IAAI,CAACyD,aAAL,EAJW,EAKXzD,IAAI,CAAC0D,aAAL,EALW,CAAX;AAOA,kBAAI0B,WAAW,GAAG3H,SAAS,CAAC4H,eAAV,CAA0BJ,YAA1B,EAAwCC,IAAxC,CAAlB;AACA,kBAAItE,QAAQ,GAAGnD,SAAS,CAAC6H,WAAV,CAAsBF,WAAW,CAAC,UAAD,CAAjC,CAAf;AACA,kBAAIvE,SAAS,GAAGpD,SAAS,CAAC8H,YAAV,CAAuBH,WAAW,CAAC,WAAD,CAAlC,CAAhB;AACA,kBAAItE,QAAQ,GAAGsE,WAAW,CAAC,QAAD,CAAX,GAAwB,IAAvC;AAEA,qBAAO,IAAI5H,SAAS,CAACmD,QAAd,CAAuBC,QAAvB,EAAiCC,SAAjC,EAA4CC,QAA5C,CAAP;AACH,aA9EsB;;AAEvB;AACI6B,YAAAA,GAHmB,GAGb,IAAInF,SAAS,CAACgI,WAAd,CAA0B,WAA1B,CAHa;AAIvB7C,YAAAA,GAAG,CAAC8C,QAAJ,CAAa,IAAIjI,SAAS,CAACkI,iBAAd,EAAb;AACA/C,YAAAA,GAAG,CAAC8C,QAAJ,CAAa,IAAIjI,SAAS,CAACmI,SAAd,EAAb,EALuB,CAOvB;;AACIC,YAAAA,cARmB,GAQF,IAAIpI,SAAS,CAACqI,cAAd,EARE;AASvBlD,YAAAA,GAAG,CAAC8C,QAAJ,CAAaG,cAAb;AACIE,YAAAA,eAVmB,GAUD,IAAItI,SAAS,CAACuI,eAAd,EAVC;AAWvBpD,YAAAA,GAAG,CAAC8C,QAAJ,CAAaK,eAAb;AACInG,YAAAA,GAZmB,GAYb,IAAIC,IAAJ,EAZa;AAavBgG,YAAAA,cAAc,CAAC5F,IAAf,GAAsBL,GAAtB;AACAmG,YAAAA,eAAe,CAAC9F,IAAhB,GAAuBL,GAAvB;AAGIqG,YAAAA,YAjBmB,GAiBJ,IAAIxI,SAAS,CAACyI,YAAd,EAjBI;AAkBvBtD,YAAAA,GAAG,CAAC8C,QAAJ,CAAaO,YAAb;AACArD,YAAAA,GAAG,CAAC8C,QAAJ,CAAa,IAAIjI,SAAS,CAAC0I,uBAAd,CAAsCvD,GAAtC,CAAb,EAnBuB,CAsBvB;;AACIwD,YAAAA,gBAvBmB,GAuBA,IAAI3I,SAAS,CAAC4I,eAAd,EAvBA;AAwBnBC,YAAAA,UAxBmB,GAwBN,IAAI7I,SAAS,CAAC4I,eAAd,CAA8B,OAA9B,CAxBM;AAyBnBE,YAAAA,SAzBmB,GAyBP,IAAI9I,SAAS,CAAC4I,eAAd,EAzBO;AA2BnBG,YAAAA,WA3BmB,GA2BL,IAAI/I,SAAS,CAAC4I,eAAd,CAA8B,OAA9B,CA3BK;AA4BnB7H,YAAAA,WA5BmB,GA4BL,IAAIf,SAAS,CAAC4I,eAAd,CAA8B,cAA9B,CA5BK;AA6BnB1H,YAAAA,WA7BmB,GA6BL,IAAIlB,SAAS,CAAC4I,eAAd,CAA8B,cAA9B,CA7BK;AA8BnBxH,YAAAA,WA9BmB,GA8BL,IAAIpB,SAAS,CAAC4I,eAAd,CAA8B,cAA9B,CA9BK;AA+BnBtH,YAAAA,WA/BmB,GA+BL,IAAItB,SAAS,CAAC4I,eAAd,CAA8B,cAA9B,CA/BK;AAiCnB3H,YAAAA,cAjCmB,GAiCF,IAAIjB,SAAS,CAAC4I,eAAd,CAA8B,YAA9B,CAjCE;AAkCnBzH,YAAAA,cAlCmB,GAkCF,IAAInB,SAAS,CAAC4I,eAAd,CAA8B,YAA9B,CAlCE;AAmCnBvH,YAAAA,cAnCmB,GAmCF,IAAIrB,SAAS,CAAC4I,eAAd,CAA8B,YAA9B,CAnCE;AAoCnBrH,YAAAA,cApCmB,GAoCF,IAAIvB,SAAS,CAAC4I,eAAd,CAA8B,YAA9B,CApCE;AAsCvBzD,YAAAA,GAAG,CAAC8C,QAAJ,CAAaU,gBAAb;AACAxD,YAAAA,GAAG,CAAC8C,QAAJ,CAAalH,WAAb;AACAoE,YAAAA,GAAG,CAAC8C,QAAJ,CAAa/G,WAAb;AACAiE,YAAAA,GAAG,CAAC8C,QAAJ,CAAa7G,WAAb;AACA+D,YAAAA,GAAG,CAAC8C,QAAJ,CAAa3G,WAAb;AAEA6D,YAAAA,GAAG,CAAC8C,QAAJ,CAAahH,cAAb;AACAkE,YAAAA,GAAG,CAAC8C,QAAJ,CAAa9G,cAAb;AACAgE,YAAAA,GAAG,CAAC8C,QAAJ,CAAa5G,cAAb;AACA8D,YAAAA,GAAG,CAAC8C,QAAJ,CAAa1G,cAAb;AAEA4D,YAAAA,GAAG,CAAC8C,QAAJ,CAAaa,SAAb;AACA3D,YAAAA,GAAG,CAAC8C,QAAJ,CAAaY,UAAb;AACA1D,YAAAA,GAAG,CAAC8C,QAAJ,CAAac,WAAb,EAnDuB,CAsDvB;;AAqCI9F,YAAAA,WA3FmB,GA2FL,EA3FK;AA8JvBxC,YAAAA,aAAa,CAACN,QAAD,CAAb;AA8IA;AACAgF,YAAAA,GAAG,CAACC,MAAJ;;AA7SuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXhF,WAAW;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import WorldWind from '@nasaworldwind/worldwind'\nvar satellite = require('satellite.js');\n//import TLE_DATA from '../tle_data/basicTLE.json'\nimport TLE_DATA from '../tle_data/TLE2.json'\n\n\nexport const launchGlobe = async () => {        \n\n    // Create a WorldWindow for the canvas.\n    var wwd = new WorldWind.WorldWindow(\"canvasOne\");\n    wwd.addLayer(new WorldWind.BMNGOneImageLayer());        \n    wwd.addLayer(new WorldWind.BMNGLayer());\n    \n    // Adding star and atmosphere layer:    \n    var starFieldLayer = new WorldWind.StarFieldLayer();    \n    wwd.addLayer(starFieldLayer);    \n    var atmosphereLayer = new WorldWind.AtmosphereLayer();    \n    wwd.addLayer(atmosphereLayer);\n    var now = new Date();\n    starFieldLayer.time = now;\n    atmosphereLayer.time = now;\n\n\n    var compassLayer = new WorldWind.CompassLayer();\n    wwd.addLayer(compassLayer);        \n    wwd.addLayer(new WorldWind.CoordinatesDisplayLayer(wwd));\n\n\n    // Adding custom layers\n    var orbitsHoverLayer = new WorldWind.RenderableLayer();\n    var modelLayer = new WorldWind.RenderableLayer(\"Model\");\n    var meshLayer = new WorldWind.RenderableLayer();\n\n    var orbitsLayer = new WorldWind.RenderableLayer(\"Orbit\");\n    var leoSatLayer = new WorldWind.RenderableLayer(\"LEO Payloads\");\n    var meoSatLayer = new WorldWind.RenderableLayer(\"MEO Payloads\");\n    var heoSatLayer = new WorldWind.RenderableLayer(\"HEO Payloads\");\n    var geoSatLayer = new WorldWind.RenderableLayer(\"GEO Payloads\");\n\n    var leoDebrisLayer = new WorldWind.RenderableLayer(\"LEO Debris\");\n    var meoDebrisLayer = new WorldWind.RenderableLayer(\"MEO Debris\");\n    var heoDebrisLayer = new WorldWind.RenderableLayer(\"HEO Debris\");\n    var geoDebrisLayer = new WorldWind.RenderableLayer(\"GEO Debris\");\n    \n    wwd.addLayer(orbitsHoverLayer);\n    wwd.addLayer(leoSatLayer);\n    wwd.addLayer(meoSatLayer);\n    wwd.addLayer(heoSatLayer);\n    wwd.addLayer(geoSatLayer);\n    \n    wwd.addLayer(leoDebrisLayer);\n    wwd.addLayer(meoDebrisLayer);\n    wwd.addLayer(heoDebrisLayer);\n    wwd.addLayer(geoDebrisLayer);\n    \n    wwd.addLayer(meshLayer);\n    wwd.addLayer(modelLayer);\n    wwd.addLayer(orbitsLayer);\n\n\n    // Get position of every satellite\n    function getPosition(satrec, time) {\n        var position_and_velocity = satellite.propagate(satrec,\n        time.getUTCFullYear(),\n        time.getUTCMonth() + 1,\n        time.getUTCDate(),\n        time.getUTCHours(),\n        time.getUTCMinutes(),\n        time.getUTCSeconds());\n        var position_eci = position_and_velocity[\"position\"];\n    \n        var gmst = satellite.gstime_from_date(time.getUTCFullYear(),\n        time.getUTCMonth() + 1,\n        time.getUTCDate(),\n        time.getUTCHours(),\n        time.getUTCMinutes(),\n        time.getUTCSeconds());\n    \n        var position_gd = satellite.eci_to_geodetic(position_eci, gmst);\n        var latitude = satellite.degrees_lat(position_gd[\"latitude\"]);\n        var longitude = satellite.degrees_long(position_gd[\"longitude\"]);\n        var altitude = position_gd[\"height\"] * 1000;\n    \n        return new WorldWind.Position(latitude, longitude, altitude);\n    }\n\n    function jday(year, mon, day, hr, minute, sec) {\n        'use strict';\n        return (367.0 * year -\n          Math.floor((7 * (year + Math.floor((mon + 9) / 12.0))) * 0.25) +\n          Math.floor(275 * mon / 9.0) +\n          day + 1721013.5 +\n          ((sec / 60.0 + minute) / 60.0 + hr) / 24.0  //  ut in days\n          //#  - 0.5*sgn(100.0*year + mon - 190002.5) + 0.5;\n        );\n    }\n    \n    var satVelocity = [];\n    function getVelocity(satrec, time) {\n    \n        var j = jday(time.getUTCFullYear(),\n        time.getUTCMonth() + 1, // Note, this function requires months in range 1-12.\n        time.getUTCDate(),\n        time.getUTCHours(),\n        time.getUTCMinutes(),\n        time.getUTCSeconds());\n        j += time.getUTCMilliseconds() * 1.15741e-8;\n        \n        \n        var m = (j - satrec.jdsatepoch) * 1440.0;\n        var pv = satellite.sgp4(satrec, m);\n        var vx, vy, vz;\n        \n        vx = pv.velocity.x;\n        vy = pv.velocity.y;\n        vz = pv.velocity.z;\n        \n        var satVelocity = Math.sqrt(\n            vx * vx +\n            vy * vy +\n            vz * vz\n        );\n        return satVelocity;\n    }\n\n    //purifies non-working satellites\n    function sanitizeSatellites(objectArray) {\n        var faultySatellites = 0;\n        var resultArray = [];\n        var maxSats = objectArray.length;\n        var updateTime = performance.now();\n        console.log(updateTime)\n        var now = new Date();\n        var time = new Date(now.getTime());\n        for (var i = 0; i < maxSats; i += 1) {\n            \n            try {\n                var position = getPosition(satellite.twoline2satrec(objectArray[i].TLE_LINE1, objectArray[i].TLE_LINE2), time);\n                var velocity = getVelocity(satellite.twoline2satrec(objectArray[i].TLE_LINE1, objectArray[i].TLE_LINE2), time);\n                \n            } catch (err) {\n                // console.log(objectArray[i].OBJECT_NAME +\" is a faulty sat it is \" + i);\n                faultySatellites += 1;                \n                continue;\n            }\n        \n            console.log('objectArray[i]: ', objectArray[i].LAUNCH_DATE)\n            if(typeof objectArray[i].LAUNCH_DATE === \"undefined\") continue;\n            console.log('JAJA, it worked!')\n\n            resultArray.push(objectArray[i]);\n        }\n        console.log('objectArray[i]: ', objectArray[0])\n        position = getPosition(satellite.twoline2satrec(objectArray[0].TLE_LINE1, objectArray[0].TLE_LINE2), time);\n\n        console.log('position: ', position)\n        console.log('velocity: ', velocity)\n        updateTime = performance.now() - updateTime;\n        console.log('faultySatellites: ',faultySatellites);\n        console.log(objectArray.length + \" from uncleansed\");\n        console.log(resultArray.length + \" from cleansed\");        \n        return resultArray;\n    }\n\n    getSatellites(TLE_DATA)\n\n    function getSatellites(satellites) {\n        var satPac = sanitizeSatellites(satellites);\n        satPac.satDataString = JSON.stringify(satPac);\n    \n        leoSatLayer.enabled = true;        \n        leoDebrisLayer.enabled = true;\n\n        meoSatLayer.enabled = true;        \n        meoDebrisLayer.enabled = true;\n\n        heoSatLayer.enabled = true;        \n        heoDebrisLayer.enabled = true;\n\n        geoSatLayer.enabled = true;        \n        geoDebrisLayer.enabled = true;\n    \n        var satNum = satPac.length;    \n\n        /***Satellite Propagation***/\n        //plots all sats\n        renderSats(satPac);\n\n\n        function renderSats(satData) {\n          // trackedPlaceholder.textContent = satData.length;\n          console.log('renderSats: ', satNum)\n          var satNames = [];\n          var satOwner = [];\n          var satDate = [];\n          var satSite = [];\n          var satStatus = [];\n          var now = new Date();\n          var everyCurrentPosition = [];\n          \n          \n          for (var j = 0; j < satNum; j++) {\n\n            var currentPosition = null;\n            var time = new Date(now.getTime());\n    \n            try {\n              var velocity = getVelocity(satellite.twoline2satrec(satData[j].TLE_LINE1, satData[j].TLE_LINE2), time);\n              var position = getPosition(satellite.twoline2satrec(satData[j].TLE_LINE1, satData[j].TLE_LINE2), time);\n            } catch (err) {\n              console.log(err + 'Error in renderSats, sat ' + j +  \": \" + satPac[j].OBJECT_NAME);\n              continue;\n            }\n\n\n            try {                \n                satVelocity.push(velocity);\n                currentPosition = new WorldWind.Position(position.latitude,\n                position.longitude,\n                position.altitude);\n                everyCurrentPosition.push(currentPosition);\n                satSite.push(satData[j].LAUNCH_SITE);\n                satNames.push(satData[j].OBJECT_NAME);\n                satOwner.push(satData[j].OWNER);\n                satStatus.push(satData[j].OPERATIONAL_STATUS);\n                satDate[j] = satData[j].LAUNCH_DATE.substring(0, 4);\n            } catch (err) {                \n                console.log(err + ' in renderSats, sat ' + j);\n                console.log(satData[j].OBJECT_NAME);\n              continue;\n            }\n\n\n            var placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n            var highlightPlacemarkAttributes = new WorldWind.PlacemarkAttributes(placemarkAttributes);\n            highlightPlacemarkAttributes.imageScale = 0.4;\n    \n            console.log('Loading assets')\n            //add colored image depending on sat type\n            switch (satData[j].OBJECT_TYPE) {              \n              case \"PAYLOAD\":\n                placemarkAttributes.imageSource = \"assets/icons/blue_dot.png\";\n                placemarkAttributes.imageScale = 0.3;\n                break;\n              case \"ROCKET BODY\":\n                placemarkAttributes.imageSource = \"assets/icons/yellow_dot.png\";\n                placemarkAttributes.imageScale = 0.3;\n                break;\n              default:\n                placemarkAttributes.imageSource = \"assets/icons/red_dot.png\";\n                placemarkAttributes.imageScale = 0.2;\n                highlightPlacemarkAttributes.imageScale = 0.3;\n            }\n    \n            placemarkAttributes.imageOffset = new WorldWind.Offset(\n              WorldWind.OFFSET_FRACTION, 0.5,\n              WorldWind.OFFSET_FRACTION, 0.5);\n            placemarkAttributes.imageColor = WorldWind.Color.WHITE;\n            placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n              WorldWind.OFFSET_FRACTION, 0.5,\n              WorldWind.OFFSET_FRACTION, 1.0);\n            placemarkAttributes.labelAttributes.color = WorldWind.Color.WHITE;\n    \n    \n            var placemark = new WorldWind.Placemark(everyCurrentPosition[j]);\n            placemark.altitudeMode = WorldWind.RELATIVE_TO_GROUND;\n            placemark.attributes = placemarkAttributes;\n            placemark.highlightAttributes = highlightPlacemarkAttributes;\n    \n            //Defines orbit ranges\n            if (satData[j].OBJECT_TYPE === \"PAYLOAD\") {\n              if (satData[j].ORBIT_TYPE === \"Low Earth Orbit\") {\n                leoSatLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Middle Earth Orbit\") {\n                meoSatLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Geosynchronous\") {\n                geoSatLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Highly Elliptical Orbit\") {\n                heoSatLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Unclassified\") {\n                //unclassifiedSatLayer.addRenderable(placemark);\n              } else {\n                console.log(satData[j].ORBIT_TYPE);\n              }\n            } else if (satData[j].OBJECT_TYPE === \"DEBRIS\") {\n              if (satData[j].ORBIT_TYPE === \"Low Earth Orbit\") {\n                leoDebrisLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Middle Earth Orbit\") {\n                meoDebrisLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Geosynchronous\") {\n                geoDebrisLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Highly Elliptical Orbit\") {\n                heoDebrisLayer.addRenderable(placemark);\n              } else if (satData[j].ORBIT_TYPE === \"Unclassified\") {\n                //unclassifiedDebrisLayer.addRenderable(placemark);\n              } else {\n                console.log(satData[j].ORBIT_TYPE);\n              }\n            }                \n          } //End of for                 \n    \n          wwd.redraw();\n        }\n      }\n\n\n    //var layerManger = new LayerManager(wwd);\n    wwd.redraw();\n\n}"]}]}