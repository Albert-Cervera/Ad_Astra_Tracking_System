{"remainingRequest":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js!/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Wallet.vue?vue&type=template&id=7f1455a9","dependencies":[{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Wallet.vue","mtime":1632874067632},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js","mtime":1630090222596},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1630090234547},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/index.js","mtime":1630090234547}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIGNyZWF0ZUNvbW1lbnRWTm9kZSBhcyBfY3JlYXRlQ29tbWVudFZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSB9IGZyb20gInZ1ZSI7Cgp2YXIgX2hvaXN0ZWRfMSA9IC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJiIiwgbnVsbCwgIldhbGxldCBpbmZvcm1hdGlvbiIpXSwgLTEKLyogSE9JU1RFRCAqLwopOwoKdmFyIF9ob2lzdGVkXzIgPSB7CiAga2V5OiAwCn07CnZhciBfaG9pc3RlZF8zID0gewogIGtleTogMQp9OwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVRleHRWTm9kZSgiIENvbm5lY3QgeW91ciB3YWxsZXQ6ICIpOwoKdmFyIF9ob2lzdGVkXzUgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgiYnIiLCBudWxsLCBudWxsLCAtMQovKiBIT0lTVEVEICovCik7Cgp2YXIgX2hvaXN0ZWRfNiA9IHsKICBrZXk6IDIKfTsKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBudWxsLCBbX2hvaXN0ZWRfMSwgJHNldHVwLndhbGxldEFkZHJlc3MgPyAoX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBfaG9pc3RlZF8yLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsICJBZGRyZXNzOiAiICsgX3RvRGlzcGxheVN0cmluZygkc2V0dXAud2FsbGV0QWRkcmVzcyksIDEKICAvKiBURVhUICovCiAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsICJCYWxhbmNlOiAiICsgX3RvRGlzcGxheVN0cmluZygkc2V0dXAuYmFsYW5jZSkgKyAiIEVUSCIsIDEKICAvKiBURVhUICovCiAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgicCIsIG51bGwsICJDdXJyZW50IE5ldHdvcms6ICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRzZXR1cC5uZXR3b3JrKSwgMQogIC8qIFRFWFQgKi8KICApLCAkc2V0dXAuc2hvd1VubGlua0J1dHRvbiA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImJ1dHRvbiIsIHsKICAgIGtleTogMCwKICAgIG9uQ2xpY2s6IF9jYWNoZVswXSB8fCAoX2NhY2hlWzBdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJHNldHVwLm9uVW5saW5rQWNjb3VudCAmJiAkc2V0dXAub25VbmxpbmtBY2NvdW50LmFwcGx5KCRzZXR1cCwgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIiBVbmxpbmsgYWNjb3VudCAiKSkgOiBfY3JlYXRlQ29tbWVudFZOb2RlKCJ2LWlmIiwgdHJ1ZSksIF9jcmVhdGVFbGVtZW50Vk5vZGUoImJ1dHRvbiIsIHsKICAgIG9uQ2xpY2s6IF9jYWNoZVsxXSB8fCAoX2NhY2hlWzFdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gJHNldHVwLm9uRGlzY29ubmVjdCAmJiAkc2V0dXAub25EaXNjb25uZWN0LmFwcGx5KCRzZXR1cCwgYXJndW1lbnRzKTsKICAgIH0pCiAgfSwgIkRpc2Nvbm5lY3QiKV0pKSA6IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzMsIFtfaG9pc3RlZF80LCBfY3JlYXRlRWxlbWVudFZOb2RlKCJidXR0b24iLCB7CiAgICBvbkNsaWNrOiBfY2FjaGVbMl0gfHwgKF9jYWNoZVsyXSA9IGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuICRzZXR1cC5vbkNvbm5lY3QgJiYgJHNldHVwLm9uQ29ubmVjdC5hcHBseSgkc2V0dXAsIGFyZ3VtZW50cyk7CiAgICB9KQogIH0sICJDb25uZWN0IildKSksIF9ob2lzdGVkXzUsICRzZXR1cC5vd25lciA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzYsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgIk93bmVyIHdpdGggYWRkcmVzczogIiArIF90b0Rpc3BsYXlTdHJpbmcoJHNldHVwLm93bmVyKSwgMQogIC8qIFRFWFQgKi8KICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJwIiwgbnVsbCwgImZyb20gY29udHJhY3Q6ICIgKyBfdG9EaXNwbGF5U3RyaW5nKCRzZXR1cC50ZXN0QWRkcmVzcyksIDEKICAvKiBURVhUICovCiAgKV0pKSA6IF9jcmVhdGVDb21tZW50Vk5vZGUoInYtaWYiLCB0cnVlKV0pOwp9"},{"version":3,"sources":["/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Wallet.vue"],"names":[],"mappings":";;8BAEI,mBAAA,CAAgC,GAAhC,EAAgC,IAAhC,EAAgC,C,aAA7B,mBAAA,CAAyB,GAAzB,EAAyB,IAAzB,EAAG,oBAAH,CAA6B,CAAhC,E;;AAAA,C;;;;;;;;;+CAUY,wB;;8BAIZ,mBAAA,CAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM,CAAA;AAAA;AAAN,C;;;;;;uBAfF,mBAAA,CAoBM,KApBN,EAoBM,IApBN,EAoBM,CAnBJ,UAmBI,EAlBO,MAAA,CAAA,a,kBAAX,mBAAA,CAQM,KARN,EAQM,UARN,EAQM,CAPJ,mBAAA,CAAmC,GAAnC,EAAmC,IAAnC,EAAG,cAAS,gBAAA,CAAG,MAAA,CAAA,aAAH,CAAZ,EAA4B;AAAA;AAA5B,GAOI,EANJ,mBAAA,CAAiC,GAAjC,EAAiC,IAAjC,EAAG,cAAS,gBAAA,CAAG,MAAA,CAAA,OAAH,CAAT,GAAsB,MAAzB,EAA6B;AAAA;AAA7B,GAMI,EALJ,mBAAA,CAAqC,GAArC,EAAqC,IAArC,EAAG,sBAAiB,gBAAA,CAAG,MAAA,CAAA,OAAH,CAApB,EAA8B;AAAA;AAA9B,GAKI,EAJU,MAAA,CAAA,gB,kBAAd,mBAAA,CAES,QAFT,EAES;UAAA;AAFwB,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,MAAA,CAAA,eAAA,IAAA,MAAA,CAAA,eAAA,OAAA,MAAA,YAAF;AAAA,KAAA;AAE7B,GAFT,EAAyD,kBAAzD,C,qCAII,EADJ,mBAAA,CAAiD,QAAjD,EAAiD;AAAxC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,MAAA,CAAA,YAAA,IAAA,MAAA,CAAA,YAAA,OAAA,MAAA,YAAF;AAAA,KAAA;AAAmC,GAAjD,EAA8B,YAA9B,CACI,CARN,C,mBASA,mBAAA,CAGM,KAHN,EAGM,UAHN,EAGM,C,UAAA,EADJ,mBAAA,CAA2C,QAA3C,EAA2C;AAAlC,IAAA,OAAK,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,MAAA,CAAA,SAAA,IAAA,MAAA,CAAA,SAAA,OAAA,MAAA,YAAF;AAAA,KAAA;AAA6B,GAA3C,EAA2B,SAA3B,CACI,CAHN,C,CASI,EALJ,UAKI,EAJO,MAAA,CAAA,K,kBAAX,mBAAA,CAGM,KAHN,EAGM,UAHN,EAGM,CAFJ,mBAAA,CAAsC,GAAtC,EAAsC,IAAtC,EAAG,yBAAoB,gBAAA,CAAG,MAAA,CAAA,KAAH,CAAvB,EAA+B;AAAA;AAA/B,GAEI,EADJ,mBAAA,CAAuC,GAAvC,EAAuC,IAAvC,EAAG,oBAAe,gBAAA,CAAG,MAAA,CAAA,WAAH,CAAlB,EAAgC;AAAA;AAAhC,GACI,CAHN,C,qCAII,CApBN,C","sourcesContent":["<template>\n  <div>\n    <p><b>Wallet information</b></p>\n    <div v-if=\"walletAddress\">\n      <p>Address: {{ walletAddress }}</p>\n      <p>Balance: {{ balance }} ETH</p>\n      <p>Current Network: {{ network }}</p>\n      <button v-if=\"showUnlinkButton\" @click=\"onUnlinkAccount\">\n        Unlink account\n      </button>\n      <button @click=\"onDisconnect\">Disconnect</button>\n    </div>\n    <div v-else>\n      Connect your wallet:\n      <button @click=\"onConnect\">Connect</button>\n    </div>\n    <br />\n    <div v-if=\"owner\">\n      <p>Owner with address: {{ owner }}</p>\n      <p>from contract: {{ testAddress }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { useStore } from 'vuex'\n  import { computed, ref, onMounted } from 'vue'\n\n  import web3Modal from '@/web3Modal'\n\n  import {\n    getUserInformation,\n    readTestContract,\n  } from '@/services/WalletService'\n  import { NETWORK_NAMES } from '../constants/walletConstants'\n  import { TEST_CONTRACT_ADDRESS } from '../constants/contractTest'\n\n  export default {\n    name: 'Wallet',\n\n    setup() {\n      const store = useStore()\n\n      const {\n        state: { user },\n        dispatch,\n      } = store\n\n      const owner = ref('')\n      const testAddress = TEST_CONTRACT_ADDRESS\n\n      const showUnlinkButton = ref(false)\n      const customProvider = ref(null)\n\n      const balance = computed(() => user.balance)\n      const walletAddress = computed(() => user.walletAddress)\n      const network = computed(() => NETWORK_NAMES[user.networkId])\n\n      const onConnect = async () => {\n        try {\n          const provider = await web3Modal.connect()\n          customProvider.value = provider\n\n          const userInformation = await getUserInformation(provider)\n          showUnlinkButton.value =\n            web3Modal.cachedProvider === 'custom-coinbase'\n\n          // console.log(userInformation)\n\n          dispatch('setWalletInformation', userInformation)\n\n          await subscribeProvider(provider)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n\n      const readContract = async () => {\n        owner.value = await readTestContract()\n      }\n\n      const onUnlinkAccount = async () => {\n        const provider = customProvider.value\n\n        if (typeof provider.close === 'function') {\n          provider.close()\n          await onDisconnect()\n        }\n      }\n\n      const onDisconnect = async () => {\n        await web3Modal.clearCachedProvider()\n\n        dispatch('resetWalletInformation')\n      }\n\n      const subscribeProvider = (provider) => {\n        try {\n          provider.on('close', () => {\n            console.log('reset app')\n          })\n\n          provider.on('accountsChanged', async (accounts) => {\n            if (!accounts.length) {\n              await onDisconnect()\n            } else {\n              const information = await getUserInformation(provider)\n              dispatch('setWalletInformation', information)\n            }\n          })\n\n          provider.on('chainChanged', async (chainId) => {\n            console.log('chainChanged', chainId)\n          })\n\n          provider.on('networkChanged', async (networkId) => {\n            const information = await getUserInformation(provider)\n            const payload = {\n              ...information,\n              networkId: Number(networkId),\n            }\n            dispatch('setWalletInformation', payload)\n          })\n        } catch (error) {\n          console.log(error)\n        }\n      }\n\n      onMounted(async () => {\n        if (web3Modal.cachedProvider) {\n          await onConnect()\n        }\n\n        await readContract()\n      })\n\n      return {\n        balance,\n        network,\n        owner,\n        showUnlinkButton,\n        testAddress,\n        walletAddress,\n        onUnlinkAccount,\n        onConnect,\n        onDisconnect,\n      }\n    },\n  }\n</script>\n"],"sourceRoot":""}]}