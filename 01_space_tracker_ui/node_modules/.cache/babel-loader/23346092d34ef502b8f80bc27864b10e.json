{"remainingRequest":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js!/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/eslint-loader/index.js??ref--13-0!/home/avocado/Documents/NASA/01_space_tracker_ui/src/web3/index.js","dependencies":[{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/web3/index.js","mtime":1632874032724},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js","mtime":1630090222596},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/eslint-loader/index.js","mtime":1630090229671}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IFdlYjMgZnJvbSAnd2ViMyc7CmltcG9ydCB7IElORlVSQV9NQUlOTkVUX0JBU0VfVVJMIH0gZnJvbSAnLi4vY29uc3RhbnRzL3dhbGxldENvbnN0YW50cyc7CmV4cG9ydCB2YXIgd2ViM0luZnVyYUNsaWVudCA9IGZ1bmN0aW9uIHdlYjNJbmZ1cmFDbGllbnQoKSB7CiAgdmFyIHByb3ZpZGVyID0gIiIuY29uY2F0KElORlVSQV9NQUlOTkVUX0JBU0VfVVJMLCAiLyIpLmNvbmNhdChwcm9jZXNzLmVudi5WVUVfQVBQX0lORlVSQV9BUElfS0VZKTsKICByZXR1cm4gbmV3IFdlYjMocHJvdmlkZXIpOwp9OwpleHBvcnQgdmFyIHdlYjNXYWxsZXRDbGllbnQgPSBmdW5jdGlvbiB3ZWIzV2FsbGV0Q2xpZW50KHByb3ZpZGVyKSB7CiAgdmFyIHdlYjMgPSBuZXcgV2ViMyhwcm92aWRlcik7CiAgd2ViMy5ldGguZXh0ZW5kKHsKICAgIG1ldGhvZHM6IFt7CiAgICAgIG5hbWU6ICdjaGFpbklkJywKICAgICAgY2FsbDogJ2V0aF9jaGFpbklkJywKICAgICAgb3V0cHV0Rm9ybWF0dGVyOiB3ZWIzLnV0aWxzLmhleFRvTnVtYmVyCiAgICB9XQogIH0pOwogIHJldHVybiB3ZWIzOwp9Ow=="},{"version":3,"sources":["/home/avocado/Documents/NASA/01_space_tracker_ui/src/web3/index.js"],"names":["Web3","INFURA_MAINNET_BASE_URL","web3InfuraClient","provider","process","env","VUE_APP_INFURA_API_KEY","web3WalletClient","web3","eth","extend","methods","name","call","outputFormatter","utils","hexToNumber"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,SAASC,uBAAT,QAAwC,8BAAxC;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,MAAMC,QAAQ,aAAMF,uBAAN,cAAiCG,OAAO,CAACC,GAAR,CAAYC,sBAA7C,CAAd;AACA,SAAO,IAAIN,IAAJ,CAASG,QAAT,CAAP;AACD,CAHM;AAKP,OAAO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,QAAD,EAAc;AAC5C,MAAMK,IAAI,GAAG,IAAIR,IAAJ,CAASG,QAAT,CAAb;AAEAK,EAAAA,IAAI,CAACC,GAAL,CAASC,MAAT,CAAgB;AACdC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,IAAI,EAAE,SADR;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,eAAe,EAAEN,IAAI,CAACO,KAAL,CAAWC;AAH9B,KADO;AADK,GAAhB;AASA,SAAOR,IAAP;AACD,CAbM","sourcesContent":["import Web3 from 'web3'\n\nimport { INFURA_MAINNET_BASE_URL } from '../constants/walletConstants'\n\nexport const web3InfuraClient = () => {\n  const provider = `${INFURA_MAINNET_BASE_URL}/${process.env.VUE_APP_INFURA_API_KEY}`\n  return new Web3(provider)\n}\n\nexport const web3WalletClient = (provider) => {\n  const web3 = new Web3(provider)\n\n  web3.eth.extend({\n    methods: [\n      {\n        name: 'chainId',\n        call: 'eth_chainId',\n        outputFormatter: web3.utils.hexToNumber,\n      },\n    ],\n  })\n  return web3\n}\n"]}]}