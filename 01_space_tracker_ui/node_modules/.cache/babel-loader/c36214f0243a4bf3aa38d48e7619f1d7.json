{"remainingRequest":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js!/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/eslint-loader/index.js??ref--13-0!/home/avocado/Documents/NASA/01_space_tracker_ui/src/web3Modal/index.js","dependencies":[{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/web3Modal/index.js","mtime":1632874032724},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js","mtime":1630090222596},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/eslint-loader/index.js","mtime":1630090229671}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2F2b2NhZG8vRG9jdW1lbnRzL05BU0EvMDFfc3BhY2VfdHJhY2tlcl91aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IFdlYjNNb2RhbCBmcm9tICd3ZWIzbW9kYWwnOwppbXBvcnQgV2FsbGV0TGluayBmcm9tICd3YWxsZXRsaW5rJzsKaW1wb3J0IEZvcnRtYXRpYyBmcm9tICdmb3J0bWF0aWMnOwppbXBvcnQgUG9ydGlzIGZyb20gJ0Bwb3J0aXMvd2ViMyc7CnZhciBmb3J0bWF0aWMgPSB7CiAgInBhY2thZ2UiOiBGb3J0bWF0aWMsCiAgb3B0aW9uczogewogICAga2V5OiBwcm9jZXNzLmVudi5WVUVfQVBQX0ZPUlRNQVRJQ19BUElfS0VZCiAgfQp9Owp2YXIgcG9ydGlzID0gewogICJwYWNrYWdlIjogUG9ydGlzLAogIG9wdGlvbnM6IHsKICAgIGlkOiBwcm9jZXNzLmVudi5WVUVfQVBQX1BPUlRJU19JRCwKICAgIG5ldHdvcms6ICdyaW5rZWJ5JwogIH0KfTsKdmFyIGNvaW5iYXNlID0gewogIGRpc3BsYXk6IHsKICAgIG5hbWU6ICdDb2luYmFzZScsCiAgICBkZXNjcmlwdGlvbjogJ1NjYW4gd2l0aCBXYWxsZXRMaW5rIHRvIGNvbm5lY3QnCiAgfSwKICBvcHRpb25zOiB7CiAgICBhcHBOYW1lOiAnYXBwJywKICAgIG5ldHdvcmtVcmw6ICIiLmNvbmNhdChwcm9jZXNzLmVudi5WVUVfQVBQX0lORlVSQV9CQVNFX1VSTCwgIi8iKS5jb25jYXQocHJvY2Vzcy5lbnYuVlVFX0FQUF9JTkZVUkFfQVBJX0tFWSkKICB9LAogICJwYWNrYWdlIjogV2FsbGV0TGluaywKICBjb25uZWN0b3I6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfY29ubmVjdG9yID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKF8sIG9wdGlvbnMpIHsKICAgICAgdmFyIGFwcE5hbWUsIG5ldHdvcmtVcmwsIGNoYWluSWQsIHdhbGxldExpbmssIHByb3ZpZGVyOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgYXBwTmFtZSA9IG9wdGlvbnMuYXBwTmFtZSwgbmV0d29ya1VybCA9IG9wdGlvbnMubmV0d29ya1VybCwgY2hhaW5JZCA9IG9wdGlvbnMuY2hhaW5JZDsKICAgICAgICAgICAgICB3YWxsZXRMaW5rID0gbmV3IFdhbGxldExpbmsoewogICAgICAgICAgICAgICAgYXBwTmFtZTogYXBwTmFtZQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHByb3ZpZGVyID0gd2FsbGV0TGluay5tYWtlV2ViM1Byb3ZpZGVyKG5ldHdvcmtVcmwsIGNoYWluSWQpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBwcm92aWRlci5lbmFibGUoKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBwcm92aWRlcik7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIGNvbm5lY3RvcihfeCwgX3gyKSB7CiAgICAgIHJldHVybiBfY29ubmVjdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIGNvbm5lY3RvcjsKICB9KCkKfTsKdmFyIHByb3ZpZGVyT3B0aW9ucyA9IHsKICBmb3J0bWF0aWM6IGZvcnRtYXRpYywKICBwb3J0aXM6IHBvcnRpcywKICAnY3VzdG9tLWNvaW5iYXNlJzogY29pbmJhc2UKfTsKZXhwb3J0IGRlZmF1bHQgbmV3IFdlYjNNb2RhbCh7CiAgbmV0d29yazogJ3JpbmtlYnknLAogIGNhY2hlUHJvdmlkZXI6IHRydWUsCiAgcHJvdmlkZXJPcHRpb25zOiBwcm92aWRlck9wdGlvbnMKfSk7"},{"version":3,"sources":["/home/avocado/Documents/NASA/01_space_tracker_ui/src/web3Modal/index.js"],"names":["Web3Modal","WalletLink","Fortmatic","Portis","fortmatic","options","key","process","env","VUE_APP_FORTMATIC_API_KEY","portis","id","VUE_APP_PORTIS_ID","network","coinbase","display","name","description","appName","networkUrl","VUE_APP_INFURA_BASE_URL","VUE_APP_INFURA_API_KEY","connector","_","chainId","walletLink","provider","makeWeb3Provider","enable","providerOptions","cacheProvider"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,IAAMC,SAAS,GAAG;AAChB,aAASF,SADO;AAEhBG,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADV;AAFO,CAAlB;AAOA,IAAMC,MAAM,GAAG;AACb,aAASP,MADI;AAEbE,EAAAA,OAAO,EAAE;AACPM,IAAAA,EAAE,EAAEJ,OAAO,CAACC,GAAR,CAAYI,iBADT;AAEPC,IAAAA,OAAO,EAAE;AAFF;AAFI,CAAf;AAQA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,UADC;AAEPC,IAAAA,WAAW,EAAE;AAFN,GADM;AAKfZ,EAAAA,OAAO,EAAE;AACPa,IAAAA,OAAO,EAAE,KADF;AAEPC,IAAAA,UAAU,YAAKZ,OAAO,CAACC,GAAR,CAAYY,uBAAjB,cAA4Cb,OAAO,CAACC,GAAR,CAAYa,sBAAxD;AAFH,GALM;AASf,aAASpB,UATM;AAUfqB,EAAAA,SAAS;AAAA,6EAAE,iBAAOC,CAAP,EAAUlB,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACDa,cAAAA,OADC,GACgCb,OADhC,CACDa,OADC,EACQC,UADR,GACgCd,OADhC,CACQc,UADR,EACoBK,OADpB,GACgCnB,OADhC,CACoBmB,OADpB;AAEHC,cAAAA,UAFG,GAEU,IAAIxB,UAAJ,CAAe;AAChCiB,gBAAAA,OAAO,EAAPA;AADgC,eAAf,CAFV;AAKHQ,cAAAA,QALG,GAKQD,UAAU,CAACE,gBAAX,CAA4BR,UAA5B,EAAwCK,OAAxC,CALR;AAAA;AAAA,qBAMHE,QAAQ,CAACE,MAAT,EANG;;AAAA;AAAA,+CAOFF,QAPE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAVM,CAAjB;AAqBA,IAAMG,eAAe,GAAG;AACtBzB,EAAAA,SAAS,EAATA,SADsB;AAEtBM,EAAAA,MAAM,EAANA,MAFsB;AAGtB,qBAAmBI;AAHG,CAAxB;AAMA,eAAe,IAAId,SAAJ,CAAc;AAC3Ba,EAAAA,OAAO,EAAE,SADkB;AAE3BiB,EAAAA,aAAa,EAAE,IAFY;AAG3BD,EAAAA,eAAe,EAAfA;AAH2B,CAAd,CAAf","sourcesContent":["import Web3Modal from 'web3modal'\nimport WalletLink from 'walletlink'\n\nimport Fortmatic from 'fortmatic'\nimport Portis from '@portis/web3'\n\nconst fortmatic = {\n  package: Fortmatic,\n  options: {\n    key: process.env.VUE_APP_FORTMATIC_API_KEY,\n  },\n}\n\nconst portis = {\n  package: Portis,\n  options: {\n    id: process.env.VUE_APP_PORTIS_ID,\n    network: 'rinkeby',\n  },\n}\n\nconst coinbase = {\n  display: {\n    name: 'Coinbase',\n    description: 'Scan with WalletLink to connect',\n  },\n  options: {\n    appName: 'app',\n    networkUrl: `${process.env.VUE_APP_INFURA_BASE_URL}/${process.env.VUE_APP_INFURA_API_KEY}`,\n  },\n  package: WalletLink,\n  connector: async (_, options) => {\n    const { appName, networkUrl, chainId } = options\n    const walletLink = new WalletLink({\n      appName,\n    })\n    const provider = walletLink.makeWeb3Provider(networkUrl, chainId)\n    await provider.enable()\n    return provider\n  },\n}\n\nconst providerOptions = {\n  fortmatic,\n  portis,\n  'custom-coinbase': coinbase,\n}\n\nexport default new Web3Modal({\n  network: 'rinkeby',\n  cacheProvider: true,\n  providerOptions,\n})\n"]}]}