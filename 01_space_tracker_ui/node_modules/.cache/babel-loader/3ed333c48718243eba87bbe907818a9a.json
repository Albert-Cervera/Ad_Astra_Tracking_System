{"remainingRequest":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js!/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/eslint-loader/index.js??ref--13-0!/home/avocado/Documents/NASA/01_space_tracker_ui/src/services/WorldWindService.js","dependencies":[{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/services/WorldWindService.js","mtime":1632879852693},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js","mtime":1630090222596},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/eslint-loader/index.js","mtime":1630090229671}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2F2b2NhZG8vRG9jdW1lbnRzL05BU0EvMDFfc3BhY2VfdHJhY2tlcl91aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1wcmVjaXNpb24uanMiOwppbXBvcnQgV29ybGRXaW5kIGZyb20gJ0BuYXNhd29ybGR3aW5kL3dvcmxkd2luZCc7CmV4cG9ydCB2YXIgbGF1bmNoR2xvYmUgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgdmFyIHd3ZCwgcGxhY2VtYXJrTGF5ZXIsIHBsYWNlbWFya0F0dHJpYnV0ZXMsIHBvc2l0aW9uLCBwbGFjZW1hcmssIHBvbHlnb25MYXllciwgcG9seWdvbkF0dHJpYnV0ZXMsIGJvdW5kYXJpZXMsIHBvbHlnb247CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdsYXVuY2hHbG9iZScpOyAvLyBjb25zb2xlLmxvZygnV29ybGR3aW5kIGlzOiAnLCBXb3JsZFdpbmQpCiAgICAgICAgICAgIC8vIENyZWF0ZSBhIFdvcmxkV2luZG93IGZvciB0aGUgY2FudmFzLgoKICAgICAgICAgICAgd3dkID0gbmV3IFdvcmxkV2luZC5Xb3JsZFdpbmRvdygiY2FudmFzT25lIik7CiAgICAgICAgICAgIHd3ZC5hZGRMYXllcihuZXcgV29ybGRXaW5kLkJNTkdPbmVJbWFnZUxheWVyKCkpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIobmV3IFdvcmxkV2luZC5CTU5HTGFuZHNhdExheWVyKCkpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIobmV3IFdvcmxkV2luZC5Db21wYXNzTGF5ZXIoKSk7CiAgICAgICAgICAgIHd3ZC5hZGRMYXllcihuZXcgV29ybGRXaW5kLkNvb3JkaW5hdGVzRGlzcGxheUxheWVyKHd3ZCkpOwogICAgICAgICAgICB3d2QuYWRkTGF5ZXIobmV3IFdvcmxkV2luZC5WaWV3Q29udHJvbHNMYXllcih3d2QpKTsgLy8gQWRkIGEgcGxhY2VtYXJrCgogICAgICAgICAgICBwbGFjZW1hcmtMYXllciA9IG5ldyBXb3JsZFdpbmQuUmVuZGVyYWJsZUxheWVyKCk7CiAgICAgICAgICAgIHd3ZC5hZGRMYXllcihwbGFjZW1hcmtMYXllcik7CiAgICAgICAgICAgIHBsYWNlbWFya0F0dHJpYnV0ZXMgPSBuZXcgV29ybGRXaW5kLlBsYWNlbWFya0F0dHJpYnV0ZXMobnVsbCk7CiAgICAgICAgICAgIHBsYWNlbWFya0F0dHJpYnV0ZXMuaW1hZ2VPZmZzZXQgPSBuZXcgV29ybGRXaW5kLk9mZnNldChXb3JsZFdpbmQuT0ZGU0VUX0ZSQUNUSU9OLCAwLjMsIFdvcmxkV2luZC5PRkZTRVRfRlJBQ1RJT04sIDAuMCk7CiAgICAgICAgICAgIHBsYWNlbWFya0F0dHJpYnV0ZXMubGFiZWxBdHRyaWJ1dGVzLm9mZnNldCA9IG5ldyBXb3JsZFdpbmQuT2Zmc2V0KFdvcmxkV2luZC5PRkZTRVRfRlJBQ1RJT04sIDAuNSwgV29ybGRXaW5kLk9GRlNFVF9GUkFDVElPTiwgMS4wKTsKICAgICAgICAgICAgcGxhY2VtYXJrQXR0cmlidXRlcy5pbWFnZVNvdXJjZSA9IFdvcmxkV2luZC5jb25maWd1cmF0aW9uLmJhc2VVcmwgKyAiaW1hZ2VzL3B1c2hwaW5zL3BsYWluLXJlZC5wbmciOwogICAgICAgICAgICBwb3NpdGlvbiA9IG5ldyBXb3JsZFdpbmQuUG9zaXRpb24oNTUuMCwgLTEwNi4wLCAxMDAuMCk7CiAgICAgICAgICAgIHBsYWNlbWFyayA9IG5ldyBXb3JsZFdpbmQuUGxhY2VtYXJrKHBvc2l0aW9uLCBmYWxzZSwgcGxhY2VtYXJrQXR0cmlidXRlcyk7CiAgICAgICAgICAgIHBsYWNlbWFyay5sYWJlbCA9ICJQbGFjZW1hcmtcbiIgKyAiTGF0ICIgKyBwbGFjZW1hcmsucG9zaXRpb24ubGF0aXR1ZGUudG9QcmVjaXNpb24oNCkudG9TdHJpbmcoKSArICJcbiIgKyAiTG9uICIgKyBwbGFjZW1hcmsucG9zaXRpb24ubG9uZ2l0dWRlLnRvUHJlY2lzaW9uKDUpLnRvU3RyaW5nKCk7CiAgICAgICAgICAgIHBsYWNlbWFyay5hbHdheXNPblRvcCA9IHRydWU7CiAgICAgICAgICAgIHBsYWNlbWFya0xheWVyLmFkZFJlbmRlcmFibGUocGxhY2VtYXJrKTsgLy8gQWRkIGEgcG9seWdvbgoKICAgICAgICAgICAgcG9seWdvbkxheWVyID0gbmV3IFdvcmxkV2luZC5SZW5kZXJhYmxlTGF5ZXIoKTsKICAgICAgICAgICAgd3dkLmFkZExheWVyKHBvbHlnb25MYXllcik7CiAgICAgICAgICAgIHBvbHlnb25BdHRyaWJ1dGVzID0gbmV3IFdvcmxkV2luZC5TaGFwZUF0dHJpYnV0ZXMobnVsbCk7CiAgICAgICAgICAgIHBvbHlnb25BdHRyaWJ1dGVzLmludGVyaW9yQ29sb3IgPSBuZXcgV29ybGRXaW5kLkNvbG9yKDAsIDEsIDEsIDAuNzUpOwogICAgICAgICAgICBwb2x5Z29uQXR0cmlidXRlcy5vdXRsaW5lQ29sb3IgPSBXb3JsZFdpbmQuQ29sb3IuQkxVRTsKICAgICAgICAgICAgcG9seWdvbkF0dHJpYnV0ZXMuZHJhd091dGxpbmUgPSB0cnVlOwogICAgICAgICAgICBwb2x5Z29uQXR0cmlidXRlcy5hcHBseUxpZ2h0aW5nID0gdHJ1ZTsKICAgICAgICAgICAgYm91bmRhcmllcyA9IFtdOwogICAgICAgICAgICBib3VuZGFyaWVzLnB1c2gobmV3IFdvcmxkV2luZC5Qb3NpdGlvbigyMC4wLCAtNzUuMCwgNzAwMDAwLjApKTsKICAgICAgICAgICAgYm91bmRhcmllcy5wdXNoKG5ldyBXb3JsZFdpbmQuUG9zaXRpb24oMjUuMCwgLTg1LjAsIDcwMDAwMC4wKSk7CiAgICAgICAgICAgIGJvdW5kYXJpZXMucHVzaChuZXcgV29ybGRXaW5kLlBvc2l0aW9uKDIwLjAsIC05NS4wLCA3MDAwMDAuMCkpOwogICAgICAgICAgICBwb2x5Z29uID0gbmV3IFdvcmxkV2luZC5Qb2x5Z29uKGJvdW5kYXJpZXMsIHBvbHlnb25BdHRyaWJ1dGVzKTsKICAgICAgICAgICAgcG9seWdvbi5leHRydWRlID0gdHJ1ZTsKICAgICAgICAgICAgcG9seWdvbkxheWVyLmFkZFJlbmRlcmFibGUocG9seWdvbik7CgogICAgICAgICAgY2FzZSAzMjoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiBsYXVuY2hHbG9iZSgpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOw=="},{"version":3,"sources":["/home/avocado/Documents/NASA/01_space_tracker_ui/src/services/WorldWindService.js"],"names":["WorldWind","launchGlobe","console","log","wwd","WorldWindow","addLayer","BMNGOneImageLayer","BMNGLandsatLayer","CompassLayer","CoordinatesDisplayLayer","ViewControlsLayer","placemarkLayer","RenderableLayer","placemarkAttributes","PlacemarkAttributes","imageOffset","Offset","OFFSET_FRACTION","labelAttributes","offset","imageSource","configuration","baseUrl","position","Position","placemark","Placemark","label","latitude","toPrecision","toString","longitude","alwaysOnTop","addRenderable","polygonLayer","polygonAttributes","ShapeAttributes","interiorColor","Color","outlineColor","BLUE","drawOutline","applyLighting","boundaries","push","polygon","Polygon","extrude"],"mappings":"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","sourcesContent":["import WorldWind from '@nasaworldwind/worldwind'\n\nexport const launchGlobe = async () => {\n    console.log('launchGlobe')\n    // console.log('Worldwind is: ', WorldWind)\n\n    // Create a WorldWindow for the canvas.\n    var wwd = new WorldWind.WorldWindow(\"canvasOne\");\n\n    wwd.addLayer(new WorldWind.BMNGOneImageLayer());\n    wwd.addLayer(new WorldWind.BMNGLandsatLayer());\n\n    wwd.addLayer(new WorldWind.CompassLayer());\n    wwd.addLayer(new WorldWind.CoordinatesDisplayLayer(wwd));\n    wwd.addLayer(new WorldWind.ViewControlsLayer(wwd));\n\n\n    // Add a placemark\n    var placemarkLayer = new WorldWind.RenderableLayer();\n    wwd.addLayer(placemarkLayer);\n\n    var placemarkAttributes = new WorldWind.PlacemarkAttributes(null);\n\n    placemarkAttributes.imageOffset = new WorldWind.Offset(\n        WorldWind.OFFSET_FRACTION, 0.3,\n        WorldWind.OFFSET_FRACTION, 0.0);\n\n    placemarkAttributes.labelAttributes.offset = new WorldWind.Offset(\n        WorldWind.OFFSET_FRACTION, 0.5,\n        WorldWind.OFFSET_FRACTION, 1.0);\n\n    placemarkAttributes.imageSource = WorldWind.configuration.baseUrl + \"images/pushpins/plain-red.png\";\n\n    var position = new WorldWind.Position(55.0, -106.0, 100.0);\n    var placemark = new WorldWind.Placemark(position, false, placemarkAttributes);\n\n    placemark.label = \"Placemark\\n\" +\n        \"Lat \" + placemark.position.latitude.toPrecision(4).toString() + \"\\n\" +\n        \"Lon \" + placemark.position.longitude.toPrecision(5).toString();\n    placemark.alwaysOnTop = true;\n\n    placemarkLayer.addRenderable(placemark);\n\n    // Add a polygon\n    var polygonLayer = new WorldWind.RenderableLayer();\n    wwd.addLayer(polygonLayer);\n\n    var polygonAttributes = new WorldWind.ShapeAttributes(null);\n    polygonAttributes.interiorColor = new WorldWind.Color(0, 1, 1, 0.75);\n    polygonAttributes.outlineColor = WorldWind.Color.BLUE;\n    polygonAttributes.drawOutline = true;\n    polygonAttributes.applyLighting = true;\n\n    var boundaries = [];\n    boundaries.push(new WorldWind.Position(20.0, -75.0, 700000.0));\n    boundaries.push(new WorldWind.Position(25.0, -85.0, 700000.0));\n    boundaries.push(new WorldWind.Position(20.0, -95.0, 700000.0));\n\n    var polygon = new WorldWind.Polygon(boundaries, polygonAttributes);\n    polygon.extrude = true;\n    polygonLayer.addRenderable(polygon);    \n\n}"]}]}