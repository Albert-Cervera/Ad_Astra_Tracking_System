{"remainingRequest":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js!/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/avocado/Documents/NASA/01_space_tracker_ui/src/views/Home.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/views/Home.vue","mtime":1632878068844},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js","mtime":1630090222596},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/index.js","mtime":1630090234547}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2F2b2NhZG8vRG9jdW1lbnRzL05BU0EvMDFfc3BhY2VfdHJhY2tlcl91aS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgY29tcHV0ZWQsIG9uTW91bnRlZCwgcmVmIH0gZnJvbSAndnVlJzsKaW1wb3J0IHsgdXNlU3RvcmUgfSBmcm9tICd2dWV4JzsKaW1wb3J0IE1lc3NhZ2UgZnJvbSAnQC9jb21wb25lbnRzL01lc3NhZ2UnOwppbXBvcnQgSW50ZXJmYWNlIGZyb20gJ0AvY29tcG9uZW50cy9JbnRlcmZhY2UnOwppbXBvcnQgeyBnZXRUZXN0RGF0YSB9IGZyb20gJ0Avc2VydmljZXMvVGVzdFNlcnZpY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hvbWUnLAogIGNvbXBvbmVudHM6IHsKICAgIE1lc3NhZ2U6IE1lc3NhZ2UsCiAgICBJbnRlcmZhY2U6IEludGVyZmFjZQogIH0sCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKCkgewogICAgLy8gaG9va3MKICAgIHZhciBzdG9yZSA9IHVzZVN0b3JlKCk7CiAgICB2YXIgY291bnRlciA9IHN0b3JlLnN0YXRlLmNvdW50ZXIsCiAgICAgICAgZGlzcGF0Y2ggPSBzdG9yZS5kaXNwYXRjaDsKICAgIHZhciB0ZXh0ID0gcmVmKCdIZWxsbywgTkFTQSEnKTsKICAgIHZhciB0ZXN0RGF0YSA9IHJlZihudWxsKTsKICAgIHZhciBjb3VudCA9IGNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGNvdW50ZXIuY291bnQ7CiAgICB9KTsKICAgIHZhciBzaG93QWxlcnQgPSBjb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAoLy90cnVlCiAgICAgICAgZmFsc2UKICAgICAgKTsKICAgIH0pOyAvLyBtZXRob2RzCgogICAgdmFyIGluY3JlbWVudCA9IGZ1bmN0aW9uIGluY3JlbWVudCgpIHsKICAgICAgcmV0dXJuIGRpc3BhdGNoKCdpbmNyZW1lbnRDb3VudGVyJyk7CiAgICB9OwoKICAgIG9uTW91bnRlZCggLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIF95aWVsZCRnZXRUZXN0RGF0YSwgcmVzcG9uc2UsIGVycm9yOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdnZXRUZXN0RGF0YSAuLi4nKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gZ2V0VGVzdERhdGEoKTsKCiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBfeWllbGQkZ2V0VGVzdERhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHJlc3BvbnNlID0gX3lpZWxkJGdldFRlc3REYXRhLnJlc3BvbnNlOwogICAgICAgICAgICAgIGVycm9yID0gX3lpZWxkJGdldFRlc3REYXRhLmVycm9yOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdyZXNwb25zZTogJywgcmVzcG9uc2UpOwoKICAgICAgICAgICAgICBpZiAoIWVycm9yKSB7CiAgICAgICAgICAgICAgICB0ZXN0RGF0YS52YWx1ZSA9IHJlc3BvbnNlOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkpOwogICAgcmV0dXJuIHsKICAgICAgdGV4dDogdGV4dCwKICAgICAgdGVzdERhdGE6IHRlc3REYXRhLAogICAgICBjb3VudDogY291bnQsCiAgICAgIGluY3JlbWVudDogaW5jcmVtZW50LAogICAgICBzaG93QWxlcnQ6IHNob3dBbGVydAogICAgfTsKICB9Cn07"},{"version":3,"sources":["/home/avocado/Documents/NASA/01_space_tracker_ui/src/views/Home.vue"],"names":[],"mappings":";;AA4BE,SAAS,QAAT,EAAmB,SAAnB,EAA8B,GAA9B,QAAyC,KAAzC;AACA,SAAS,QAAT,QAAyB,MAAzB;AACA,OAAO,OAAP,MAAoB,sBAApB;AACA,OAAO,SAAP,MAAsB,wBAAtB;AAEA,SAAS,WAAT,QAA4B,wBAA5B;AAGA,eAAe;AACb,EAAA,IAAI,EAAE,MADO;AAGb,EAAA,UAAU,EAAE;AACV,IAAA,OAAO,EAAP,OADU;AAEV,IAAA,SAAS,EAAT;AAFU,GAHC;AAQb,EAAA,KARa,mBAQL;AACN;AACA,QAAM,KAAI,GAAI,QAAQ,EAAtB;AACA,QACW,OADX,GAGI,KAHJ,CACE,KADF,CACW,OADX;AAAA,QAEE,QAFF,GAGI,KAHJ,CAEE,QAFF;AAKA,QAAM,IAAG,GAAI,GAAG,CAAC,cAAD,CAAhB;AACA,QAAM,QAAO,GAAI,GAAG,CAAC,IAAD,CAApB;AACA,QAAM,KAAI,GAAI,QAAQ,CAAC;AAAA,aAAM,OAAO,CAAC,KAAd;AAAA,KAAD,CAAtB;AAEA,QAAM,SAAQ,GAAI,QAAQ,CACxB;AAAA,aACE;AACA;AAFF;AAAA,KADwB,CAA1B,CAZM,CAkBN;;AACA,QAAM,SAAQ,GAAI,SAAZ,SAAY;AAAA,aAAM,QAAQ,CAAC,kBAAD,CAAd;AAAA,KAAlB;;AAEA,IAAA,SAAS,uEAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AACR,cAAA,OAAO,CAAC,GAAR,CAAY,iBAAZ;AADQ;AAAA,qBAE0B,WAAW,EAFrC;;AAAA;AAAA;AAEA,cAAA,QAFA,sBAEA,QAFA;AAEU,cAAA,KAFV,sBAEU,KAFV;AAGR,cAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,QAA1B;;AACA,kBAAI,CAAC,KAAL,EAAY;AACV,gBAAA,QAAQ,CAAC,KAAT,GAAiB,QAAjB;AACF;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,GAAT;AASA,WAAO;AACL,MAAA,IAAI,EAAJ,IADK;AAEL,MAAA,QAAQ,EAAR,QAFK;AAGL,MAAA,KAAK,EAAL,KAHK;AAIL,MAAA,SAAS,EAAT,SAJK;AAKL,MAAA,SAAS,EAAT;AALK,KAAP;AAOD;AA7CY,CAAf","sourcesContent":["<template>\n  <div class=\"home\">\n    <div v-if=\"showAlert\" class=\"alert\">\n      This is an alert, maybe some debris is about to fall\n    </div>\n    <div>Home page content will go here!</div>\n\n    <div>Firestore data from: {{ (testData || {}).env }}</div>\n\n    <div>\n      <p><b>Vuex store</b></p>\n      <div>Dev Count from state: {{ count }}</div>\n      <button @click=\"increment\">Increment</button>\n    </div>\n\n    <div>\n      <p><b>Double binding</b></p>\n      <div><input type=\"text\" v-model=\"text\" /></div>\n      <Message :message=\"text\" />\n    </div>\n\n    <div>\n      <Interface />\n    </div>\n  </div>\n</template>\n\n<script>\n  import { computed, onMounted, ref } from 'vue'\n  import { useStore } from 'vuex'\n  import Message from '@/components/Message'\n  import Interface from '@/components/Interface'\n\n  import { getTestData } from '@/services/TestService'\n  \n\n  export default {\n    name: 'Home',\n\n    components: {\n      Message,\n      Interface,\n    },\n\n    setup() {\n      // hooks\n      const store = useStore()\n      const {\n        state: { counter },\n        dispatch,\n      } = store\n\n      const text = ref('Hello, NASA!')\n      const testData = ref(null)\n      const count = computed(() => counter.count)\n\n      const showAlert = computed(\n        () =>          \n          //true\n          false\n      )\n\n      // methods\n      const increment = () => dispatch('incrementCounter')\n\n      onMounted(async () => {\n        console.log('getTestData ...')\n        const { response, error } = await getTestData()\n        console.log('response: ', response)\n        if (!error) {\n          testData.value = response\n        }\n      })\n\n      return {\n        text,\n        testData,\n        count,\n        increment,\n        showAlert,\n      }\n    },\n  }\n</script>\n\n<style scoped>\n  div {\n    margin-bottom: 0.5em;\n  }\n  .alert {\n    padding: 20px;\n    background: rgb(246, 192, 0);\n    color: rgb(4, 17, 29);\n  }\n</style>\n"],"sourceRoot":""}]}