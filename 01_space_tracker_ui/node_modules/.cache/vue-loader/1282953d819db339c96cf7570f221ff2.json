{"remainingRequest":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Interface.vue?vue&type=template&id=1a05be8e","dependencies":[{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Interface.vue","mtime":1633153929214},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js","mtime":1630090222596},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1630090234547},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/index.js","mtime":1630090234547}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIDxwPjxiPkFkIEFzdHJhICJUbyB0aGUgc3RhcnMhIjwvYj48L3A+CiAgICAKICAgIDxlbC1zd2l0Y2gKICAgICAgdi1tb2RlbD0ic2hvd1NhdGVsbGl0ZXMiCiAgICAgIGFjdGl2ZS10ZXh0PSJTaG93IHNhdGVsbGl0ZXMiCiAgICAgIGluYWN0aXZlLXRleHQ9IjooIgogICAgPgogICAgPC9lbC1zd2l0Y2g+CiAgICA8YnIgLz4KICAKCiAgICA8Y2FudmFzIGlkPSJjYW52YXNPbmUiIHdpZHRoPSIxMDI0IiBoZWlnaHQ9IjUwMCIgc3R5bGU9IndpZHRoOiAxMDAlOyBoZWlnaHQ6IGF1dG87IGJhY2tncm91bmQtY29sb3I6IGJsYWNrOyI+CiAgICAgICAgWW91ciBicm93c2VyIGRvZXMgbm90IHN1cHBvcnQgSFRNTDUgQ2FudmFzLgogICAgPC9jYW52YXM+CiAgICAKICA8L2Rpdj4K"},{"version":3,"sources":["/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Interface.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAErC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnB;IACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACX,CAAC,CAAC,EAAE,CAAC;;;IAGL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEV,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Interface.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <p><b>Ad Astra \"To the stars!\"</b></p>\n    \n    <el-switch\n      v-model=\"showSatellites\"\n      active-text=\"Show satellites\"\n      inactive-text=\":(\"\n    >\n    </el-switch>\n    <br />\n  \n\n    <canvas id=\"canvasOne\" width=\"1024\" height=\"500\" style=\"width: 100%; height: auto; background-color: black;\">\n        Your browser does not support HTML5 Canvas.\n    </canvas>\n    \n  </div>\n</template>\n\n<script>\nimport { launchGlobe } from '@/services/WorldWindService'\nimport { onMounted, onUpdated, ref } from 'vue'\n\nexport default {\n  name: 'Interface',\n\n  setup() {\n    const showSatellites = ref(true)\n     \n    // Methods\n\n    onMounted(async () => {\n      //console.log('Interface || mounted --------------------------')        \n      launchGlobe()\n      \n    })\n\n    onUpdated(async () => {\n      //console.log('Interface || onUpdated')\n      console.log('showSatellites: ', showSatellites.value)      \n    })\n \n\n    \n\n    return {\n      showSatellites,\n    }\n\n  },  \n}\n \n \n\n \n</script>\n"]}]}