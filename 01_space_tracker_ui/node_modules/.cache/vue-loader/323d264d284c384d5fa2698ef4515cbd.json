{"remainingRequest":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Interface.vue?vue&type=style&index=0&id=1a05be8e&scoped=true&lang=css","dependencies":[{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Interface.vue","mtime":1633259029960},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/css-loader/dist/cjs.js","mtime":1630090234163},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1630090234547},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/postcss-loader/src/index.js","mtime":1630090234466},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/index.js","mtime":1630090234547}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgZGl2IHsKICAgIG1hcmdpbi1ib3R0b206IDAuNWVtOwogIH0KICAudGV4dCB7ICAKICAgIGNvbG9yOiByZ2IoMjU1LCAyNTUsIDI1NSk7CiAgfQo="},{"version":3,"sources":["/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Interface.vue"],"names":[],"mappings":";EAyKE,CAAC,CAAC,EAAE;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB;EACA,CAAC,CAAC,CAAC,CAAC,EAAE;IACJ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3B","file":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Interface.vue","sourceRoot":"","sourcesContent":["<template slot-scope=\"scope\">\n  <div style=\"background-color: black;\">\n\n    <div class=\"text\"> <h1><b>ORBIT WEB DEBRIS TRACKER (O.W.D.T.)</b></h1> </div>\n    <div class=\"text\"> <p><b>Ad Astra: To the Stars!</b></p> </div>\n\n    <el-button type=\"primary\" icon=\"el-icon-codeopen\">Apply</el-button>\n\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\"><div></div>\n        \n        <el-switch\n          v-model=\"showLeo\"\n          active-text=\"Show LEO\"\n          inactive-text=\"Off\"\n        >\n        </el-switch>\n        <br /> \n\n        <el-switch\n          v-model=\"showMeo\"\n          active-text=\"Show MEO\"\n          inactive-text=\"Off\"\n        >\n        </el-switch>\n        <br /> \n\n        <el-switch\n          v-model=\"showHeo\"\n          active-text=\"Show HEO\"\n          inactive-text=\"Off\"\n        >\n        </el-switch>\n        <br /> \n\n        <el-switch\n          v-model=\"showGeo\"\n          active-text=\"Show GEO\"\n          inactive-text=\"Off\"\n        >\n        </el-switch>\n        <br /> \n\n        <el-switch\n          v-model=\"showUnc\"\n          active-text=\"Show UNC\"\n          inactive-text=\"Off\"\n        >\n        </el-switch>\n        <br />\n        \n\n\n      </el-col>\n      \n      \n      <el-col :span=\"12\"><div class=\"grid-content bg-purple\"></div>\n        <el-switch\n          v-model=\"showSat\"\n          active-text=\"Show Satellites\"\n          inactive-text=\"Off\"\n        >\n        </el-switch>\n        <br />  \n\n        <el-switch\n          v-model=\"showDebris\"\n          active-text=\"Show Debris\"\n          inactive-text=\"Off\"\n        >\n        </el-switch>\n        <br /> \n\n        <el-switch\n          v-model=\"showRocket\"\n          active-text=\"Show Rocket\"\n          inactive-text=\"Off\"\n        >\n        </el-switch>\n        <br /> \n        \n      </el-col>\n      \n            \n    </el-row>\n\n\n    <br />  \n    <canvas id=\"canvasOne\" width=\"1024\" height=\"350\" style=\"width: 100%; height: auto; background-color: black;\">\n        Your browser does not support HTML5 Canvas.\n    </canvas>\n    <br />\n    \n  </div>\n</template>\n\n<script>\nimport { launchGlobe } from '@/services/WorldWindService'\nimport { onMounted, onUpdated, ref } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default {\n  name: 'Interface',\n\n  setup() {\n    const showLeo = ref(true)\n    const showMeo = ref(true)\n    const showHeo = ref(true)\n    const showGeo = ref(true)\n    const showUnc = ref(true)\n    const showSat = ref(true)\n    const showDebris = ref(true)\n    const showRocket = ref(true)\n\n    // hooks\n      const store = useStore()\n      const { dispatch } = store\n     \n\n    // Methods\n\n    onMounted(async () => {\n      //console.log('Interface || mounted --------------------------')\n      dispatch('setLeo', showLeo.value)\n      dispatch('setMeo', showMeo.value)\n      dispatch('setHeo', showHeo.value)\n      dispatch('setGeo', showGeo.value)        \n      dispatch('setUnc', showUnc.value)\n      dispatch('setSat', showSat.value) \n      dispatch('setDebris', showDebris.value) \n      dispatch('setRocket', showRocket.value)  \n      \n      launchGlobe()\n      \n    })\n\n    onUpdated(async () => {\n      console.log('Interface || onUpdated')\n      console.log('showGeo', showGeo.value)\n      dispatch('setLeo', showLeo.value)\n      dispatch('setMeo', showMeo.value)\n      dispatch('setHeo', showHeo.value)\n      dispatch('setGeo', showGeo.value)\n      dispatch('setUnc', showUnc.value)\n      dispatch('setSat', showSat.value) \n      dispatch('setDebris', showDebris.value) \n      dispatch('setRocket', showRocket.value)\n                              \n      launchGlobe()\n    })     \n\n    return {\n      showLeo,\n      showMeo,\n      showHeo,\n      showGeo,\n      showUnc,\n      showSat,    \n      showDebris,\n      showRocket,\n    }\n\n  },  \n}\n  \n \n</script>\n\n<style scoped>\n  div {\n    margin-bottom: 0.5em;\n  }\n  .text {  \n    color: rgb(255, 255, 255);\n  }\n</style>"]}]}