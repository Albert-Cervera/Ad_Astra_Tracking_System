{"remainingRequest":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Wallet.vue?vue&type=template&id=7f1455a9","dependencies":[{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Wallet.vue","mtime":1632874067632},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/babel-loader/lib/index.js","mtime":1630090222596},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1630090234547},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/cache-loader/dist/cjs.js","mtime":1630090222612},{"path":"/home/avocado/Documents/NASA/01_space_tracker_ui/node_modules/vue-loader-v16/dist/index.js","mtime":1630090234547}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIDxwPjxiPldhbGxldCBpbmZvcm1hdGlvbjwvYj48L3A+CiAgICA8ZGl2IHYtaWY9IndhbGxldEFkZHJlc3MiPgogICAgICA8cD5BZGRyZXNzOiB7eyB3YWxsZXRBZGRyZXNzIH19PC9wPgogICAgICA8cD5CYWxhbmNlOiB7eyBiYWxhbmNlIH19IEVUSDwvcD4KICAgICAgPHA+Q3VycmVudCBOZXR3b3JrOiB7eyBuZXR3b3JrIH19PC9wPgogICAgICA8YnV0dG9uIHYtaWY9InNob3dVbmxpbmtCdXR0b24iIEBjbGljaz0ib25VbmxpbmtBY2NvdW50Ij4KICAgICAgICBVbmxpbmsgYWNjb3VudAogICAgICA8L2J1dHRvbj4KICAgICAgPGJ1dHRvbiBAY2xpY2s9Im9uRGlzY29ubmVjdCI+RGlzY29ubmVjdDwvYnV0dG9uPgogICAgPC9kaXY+CiAgICA8ZGl2IHYtZWxzZT4KICAgICAgQ29ubmVjdCB5b3VyIHdhbGxldDoKICAgICAgPGJ1dHRvbiBAY2xpY2s9Im9uQ29ubmVjdCI+Q29ubmVjdDwvYnV0dG9uPgogICAgPC9kaXY+CiAgICA8YnIgLz4KICAgIDxkaXYgdi1pZj0ib3duZXIiPgogICAgICA8cD5Pd25lciB3aXRoIGFkZHJlc3M6IHt7IG93bmVyIH19PC9wPgogICAgICA8cD5mcm9tIGNvbnRyYWN0OiB7eyB0ZXN0QWRkcmVzcyB9fTwvcD4KICAgIDwvZGl2PgogIDwvZGl2Pgo="},{"version":3,"sources":["/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Wallet.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,EAAE,CAAC;IACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/avocado/Documents/NASA/01_space_tracker_ui/src/components/Wallet.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <p><b>Wallet information</b></p>\n    <div v-if=\"walletAddress\">\n      <p>Address: {{ walletAddress }}</p>\n      <p>Balance: {{ balance }} ETH</p>\n      <p>Current Network: {{ network }}</p>\n      <button v-if=\"showUnlinkButton\" @click=\"onUnlinkAccount\">\n        Unlink account\n      </button>\n      <button @click=\"onDisconnect\">Disconnect</button>\n    </div>\n    <div v-else>\n      Connect your wallet:\n      <button @click=\"onConnect\">Connect</button>\n    </div>\n    <br />\n    <div v-if=\"owner\">\n      <p>Owner with address: {{ owner }}</p>\n      <p>from contract: {{ testAddress }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { useStore } from 'vuex'\n  import { computed, ref, onMounted } from 'vue'\n\n  import web3Modal from '@/web3Modal'\n\n  import {\n    getUserInformation,\n    readTestContract,\n  } from '@/services/WalletService'\n  import { NETWORK_NAMES } from '../constants/walletConstants'\n  import { TEST_CONTRACT_ADDRESS } from '../constants/contractTest'\n\n  export default {\n    name: 'Wallet',\n\n    setup() {\n      const store = useStore()\n\n      const {\n        state: { user },\n        dispatch,\n      } = store\n\n      const owner = ref('')\n      const testAddress = TEST_CONTRACT_ADDRESS\n\n      const showUnlinkButton = ref(false)\n      const customProvider = ref(null)\n\n      const balance = computed(() => user.balance)\n      const walletAddress = computed(() => user.walletAddress)\n      const network = computed(() => NETWORK_NAMES[user.networkId])\n\n      const onConnect = async () => {\n        try {\n          const provider = await web3Modal.connect()\n          customProvider.value = provider\n\n          const userInformation = await getUserInformation(provider)\n          showUnlinkButton.value =\n            web3Modal.cachedProvider === 'custom-coinbase'\n\n          // console.log(userInformation)\n\n          dispatch('setWalletInformation', userInformation)\n\n          await subscribeProvider(provider)\n        } catch (error) {\n          console.error(error)\n        }\n      }\n\n      const readContract = async () => {\n        owner.value = await readTestContract()\n      }\n\n      const onUnlinkAccount = async () => {\n        const provider = customProvider.value\n\n        if (typeof provider.close === 'function') {\n          provider.close()\n          await onDisconnect()\n        }\n      }\n\n      const onDisconnect = async () => {\n        await web3Modal.clearCachedProvider()\n\n        dispatch('resetWalletInformation')\n      }\n\n      const subscribeProvider = (provider) => {\n        try {\n          provider.on('close', () => {\n            console.log('reset app')\n          })\n\n          provider.on('accountsChanged', async (accounts) => {\n            if (!accounts.length) {\n              await onDisconnect()\n            } else {\n              const information = await getUserInformation(provider)\n              dispatch('setWalletInformation', information)\n            }\n          })\n\n          provider.on('chainChanged', async (chainId) => {\n            console.log('chainChanged', chainId)\n          })\n\n          provider.on('networkChanged', async (networkId) => {\n            const information = await getUserInformation(provider)\n            const payload = {\n              ...information,\n              networkId: Number(networkId),\n            }\n            dispatch('setWalletInformation', payload)\n          })\n        } catch (error) {\n          console.log(error)\n        }\n      }\n\n      onMounted(async () => {\n        if (web3Modal.cachedProvider) {\n          await onConnect()\n        }\n\n        await readContract()\n      })\n\n      return {\n        balance,\n        network,\n        owner,\n        showUnlinkButton,\n        testAddress,\n        walletAddress,\n        onUnlinkAccount,\n        onConnect,\n        onDisconnect,\n      }\n    },\n  }\n</script>\n"]}]}