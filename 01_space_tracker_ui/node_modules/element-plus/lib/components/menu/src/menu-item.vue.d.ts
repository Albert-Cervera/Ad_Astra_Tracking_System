import { Effect } from 'element-plus/es/components/popper';
import type { MenuItemRegistered, MenuProvider } from './types';
declare const _default: import("vue").DefineComponent<{
    readonly index: {
        readonly type: StringConstructor;
        readonly default: any;
    };
    readonly route: {
        readonly type: import("vue").PropType<import("vue-router").RouteLocationRaw>;
        readonly required: false;
        readonly validator: (val: unknown) => boolean;
    } & {
        readonly default: undefined;
    };
    readonly disabled: BooleanConstructor;
}, {
    Effect: typeof Effect;
    parentMenu: import("vue").ComputedRef<import("vue").ComponentInternalInstance>;
    rootMenu: MenuProvider;
    paddingStyle: import("vue").ComputedRef<import("vue").CSSProperties>;
    active: import("vue").ComputedRef<boolean>;
    handleClick: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    click: (item: MenuItemRegistered) => boolean;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    readonly index?: unknown;
    readonly route?: unknown;
    readonly disabled?: unknown;
} & {
    disabled: boolean;
} & {
    index?: string;
    route?: undefined;
}> & {
    onClick?: (item: MenuItemRegistered) => any;
}, {
    disabled: boolean;
    index: string;
    route: undefined;
}>;
export default _default;
