import type { ExtractPropTypes } from 'vue';
export declare const popconfirmProps: {
    readonly title: {
        readonly type: StringConstructor;
    };
    readonly confirmButtonText: {
        readonly type: StringConstructor;
    };
    readonly cancelButtonText: {
        readonly type: StringConstructor;
    };
    readonly confirmButtonType: {
        readonly default: "primary";
        readonly type: import("vue").PropType<"" | "default" | "text" | "success" | "warning" | "info" | "primary" | "danger">;
        readonly required: false;
        readonly validator: (val: unknown) => boolean;
    };
    readonly cancelButtonType: {
        readonly default: "text";
        readonly type: import("vue").PropType<"" | "default" | "text" | "success" | "warning" | "info" | "primary" | "danger">;
        readonly required: false;
        readonly validator: (val: unknown) => boolean;
    };
    readonly icon: {
        readonly type: StringConstructor;
        readonly default: "el-icon-question";
    };
    readonly iconColor: {
        readonly type: StringConstructor;
        readonly default: "#f90";
    };
    readonly hideIcon: {
        readonly type: BooleanConstructor;
        readonly default: false;
    };
};
export declare type PopconfirmProps = ExtractPropTypes<typeof popconfirmProps>;
export declare const popconfirmEmits: {
    confirm: () => boolean;
    cancel: () => boolean;
};
export declare type PopconfirmEmits = typeof popconfirmEmits;
