import type { ExtractPropTypes } from 'vue';
export declare const dialogProps: {
    readonly appendToBody: {
        readonly type: BooleanConstructor;
        readonly default: false;
    };
    readonly beforeClose: {
        readonly type: import("vue").PropType<(...args: any[]) => void>;
        readonly required: false;
        readonly validator: (val: unknown) => boolean;
    } & {
        readonly default: undefined;
    };
    readonly destroyOnClose: {
        readonly type: BooleanConstructor;
        readonly default: false;
    };
    readonly center: {
        readonly type: BooleanConstructor;
        readonly default: false;
    };
    readonly customClass: {
        readonly type: StringConstructor;
        readonly default: "";
    };
    readonly closeOnClickModal: {
        readonly type: BooleanConstructor;
        readonly default: true;
    };
    readonly closeOnPressEscape: {
        readonly type: BooleanConstructor;
        readonly default: true;
    };
    readonly fullscreen: {
        readonly type: BooleanConstructor;
        readonly default: false;
    };
    readonly lockScroll: {
        readonly type: BooleanConstructor;
        readonly default: true;
    };
    readonly modal: {
        readonly type: BooleanConstructor;
        readonly default: true;
    };
    readonly showClose: {
        readonly type: BooleanConstructor;
        readonly default: true;
    };
    readonly title: {
        readonly type: StringConstructor;
        readonly default: "";
    };
    readonly openDelay: {
        readonly type: NumberConstructor;
        readonly default: 0;
    };
    readonly closeDelay: {
        readonly type: NumberConstructor;
        readonly default: 0;
    };
    readonly top: {
        readonly type: StringConstructor;
    };
    readonly modelValue: {
        readonly type: BooleanConstructor;
        readonly required: true;
    };
    readonly modalClass: StringConstructor;
    readonly width: {
        readonly type: import("vue").PropType<string | number>;
        readonly required: false;
        readonly validator: (val: unknown) => boolean;
    } & {
        readonly default: undefined;
    };
    readonly zIndex: {
        readonly type: NumberConstructor;
    };
};
export declare type DialogProps = ExtractPropTypes<typeof dialogProps>;
export declare const dialogEmits: {
    open: () => boolean;
    opened: () => boolean;
    close: () => boolean;
    closed: () => boolean;
    "update:modelValue": (value: boolean) => boolean;
};
export declare type DialogEmits = typeof dialogEmits;
