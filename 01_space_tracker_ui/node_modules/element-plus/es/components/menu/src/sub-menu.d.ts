import type { ExtractPropTypes } from 'vue';
export declare const subMenuProps: {
    readonly index: {
        readonly type: StringConstructor;
        readonly required: true;
    };
    readonly showTimeout: {
        readonly type: import("vue").PropType<number>;
        readonly required: false;
        readonly validator: (val: unknown) => boolean;
    } & {
        readonly default: 300;
    };
    readonly hideTimeout: {
        readonly type: import("vue").PropType<number>;
        readonly required: false;
        readonly validator: (val: unknown) => boolean;
    } & {
        readonly default: 300;
    };
    readonly popperClass: StringConstructor;
    readonly disabled: BooleanConstructor;
    readonly popperAppendToBody: {
        readonly type: import("vue").PropType<boolean>;
        readonly required: false;
        readonly validator: (val: unknown) => boolean;
    } & {
        readonly default: undefined;
    };
};
export declare type SubMenuProps = ExtractPropTypes<typeof subMenuProps>;
declare const _default: import("vue").DefineComponent<{
    readonly index: {
        readonly type: StringConstructor;
        readonly required: true;
    };
    readonly showTimeout: {
        readonly type: import("vue").PropType<number>;
        readonly required: false;
        readonly validator: (val: unknown) => boolean;
    } & {
        readonly default: 300;
    };
    readonly hideTimeout: {
        readonly type: import("vue").PropType<number>;
        readonly required: false;
        readonly validator: (val: unknown) => boolean;
    } & {
        readonly default: 300;
    };
    readonly popperClass: StringConstructor;
    readonly disabled: BooleanConstructor;
    readonly popperAppendToBody: {
        readonly type: import("vue").PropType<boolean>;
        readonly required: false;
        readonly validator: (val: unknown) => boolean;
    } & {
        readonly default: undefined;
    };
}, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    readonly index?: unknown;
    readonly showTimeout?: unknown;
    readonly hideTimeout?: unknown;
    readonly popperClass?: unknown;
    readonly disabled?: unknown;
    readonly popperAppendToBody?: unknown;
} & {
    disabled: boolean;
    index: string;
    showTimeout: number;
    hideTimeout: number;
} & {
    popperClass?: string;
    popperAppendToBody?: boolean;
}>, {
    disabled: boolean;
    popperAppendToBody: boolean;
    showTimeout: number;
    hideTimeout: number;
}>;
export default _default;
